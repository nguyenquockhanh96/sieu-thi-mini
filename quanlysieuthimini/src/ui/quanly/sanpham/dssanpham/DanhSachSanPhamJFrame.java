/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.quanly.sanpham.dssanpham;

import dao.DonViTinhDAO;
import dao.NhaCungCapDAO;
import dao.NhomHangDAO;
import dao.SanPhamDAO;
import helper.DialogHelper;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.DonViTinh;
import model.NhaCungCap;
import model.NhomHang;
import model.SanPham;

/**
 *
 * @author Admin
 */
public class DanhSachSanPhamJFrame extends javax.swing.JFrame {

    /**
     * Creates new form DanhSachSanPhamJFrame
     */
    public DanhSachSanPhamJFrame() {
        initComponents();
        inIt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btg_TonKho = new javax.swing.ButtonGroup();
        pnl_CotTrai = new javax.swing.JPanel();
        lbl_TimKiem = new javax.swing.JLabel();
        txt_TimTheoTenHoacMa = new javax.swing.JTextField();
        lbl_NhomHang = new javax.swing.JLabel();
        cmb_NhomHang = new javax.swing.JComboBox<>();
        lbl_TonKho = new javax.swing.JLabel();
        rad_TatCa = new javax.swing.JRadioButton();
        rad_DuoiDinhMucTonKho = new javax.swing.JRadioButton();
        rad_VuotDinhMucTonKho = new javax.swing.JRadioButton();
        rad_ConHang = new javax.swing.JRadioButton();
        rad_HetHang = new javax.swing.JRadioButton();
        rad_DangKinhDoanh = new javax.swing.JRadioButton();
        rad_NgungKinhDoanh = new javax.swing.JRadioButton();
        cmb_NhaCungCap = new javax.swing.JComboBox<>();
        pnl_CotPhai = new javax.swing.JPanel();
        lbl_TieuDe = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_DanhSachSanPham = new javax.swing.JTable();
        btn_NgungKinhDoanh = new javax.swing.JButton();
        btn_ThemMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DANH SÁCH SẢN PHẨM");
        setResizable(false);

        pnl_CotTrai.setBackground(new java.awt.Color(255, 255, 255));

        lbl_TimKiem.setBackground(new java.awt.Color(102, 102, 255));
        lbl_TimKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_TimKiem.setForeground(new java.awt.Color(255, 255, 255));
        lbl_TimKiem.setText("   TÌM KIẾM");
        lbl_TimKiem.setOpaque(true);

        txt_TimTheoTenHoacMa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TimTheoTenHoacMa.setForeground(new java.awt.Color(204, 204, 204));
        txt_TimTheoTenHoacMa.setText("Tìm kiếm theo mã hàng, tên hàng");
        txt_TimTheoTenHoacMa.setToolTipText("");
        txt_TimTheoTenHoacMa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_TimTheoTenHoacMaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_TimTheoTenHoacMaFocusLost(evt);
            }
        });
        txt_TimTheoTenHoacMa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_TimTheoTenHoacMaKeyReleased(evt);
            }
        });

        lbl_NhomHang.setBackground(new java.awt.Color(102, 102, 255));
        lbl_NhomHang.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_NhomHang.setForeground(new java.awt.Color(255, 255, 255));
        lbl_NhomHang.setText("   NHÓM HÀNG");
        lbl_NhomHang.setOpaque(true);

        cmb_NhomHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_NhomHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_NhomHangItemStateChanged(evt);
            }
        });

        lbl_TonKho.setBackground(new java.awt.Color(102, 102, 255));
        lbl_TonKho.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_TonKho.setForeground(new java.awt.Color(255, 255, 255));
        lbl_TonKho.setText("   TỒN KHO");
        lbl_TonKho.setOpaque(true);

        rad_TatCa.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_TatCa);
        rad_TatCa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_TatCa.setSelected(true);
        rad_TatCa.setText("Tất cả");
        rad_TatCa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_TatCaItemStateChanged(evt);
            }
        });

        rad_DuoiDinhMucTonKho.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_DuoiDinhMucTonKho);
        rad_DuoiDinhMucTonKho.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_DuoiDinhMucTonKho.setText("Dưới định mức tồn kho");
        rad_DuoiDinhMucTonKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_DuoiDinhMucTonKhoItemStateChanged(evt);
            }
        });

        rad_VuotDinhMucTonKho.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_VuotDinhMucTonKho);
        rad_VuotDinhMucTonKho.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_VuotDinhMucTonKho.setText("Vượt định mức tồn kho");
        rad_VuotDinhMucTonKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_VuotDinhMucTonKhoItemStateChanged(evt);
            }
        });

        rad_ConHang.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_ConHang);
        rad_ConHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_ConHang.setText("Còn hàng");
        rad_ConHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_ConHangItemStateChanged(evt);
            }
        });

        rad_HetHang.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_HetHang);
        rad_HetHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_HetHang.setText("Hết hàng");
        rad_HetHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_HetHangItemStateChanged(evt);
            }
        });

        rad_DangKinhDoanh.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_DangKinhDoanh);
        rad_DangKinhDoanh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_DangKinhDoanh.setText("Đang kinh doanh");
        rad_DangKinhDoanh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_DangKinhDoanhItemStateChanged(evt);
            }
        });

        rad_NgungKinhDoanh.setBackground(new java.awt.Color(255, 255, 255));
        btg_TonKho.add(rad_NgungKinhDoanh);
        rad_NgungKinhDoanh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rad_NgungKinhDoanh.setText("Ngừng kinh doanh");
        rad_NgungKinhDoanh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rad_NgungKinhDoanhItemStateChanged(evt);
            }
        });

        cmb_NhaCungCap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_NhaCungCap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_NhaCungCapItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnl_CotTraiLayout = new javax.swing.GroupLayout(pnl_CotTrai);
        pnl_CotTrai.setLayout(pnl_CotTraiLayout);
        pnl_CotTraiLayout.setHorizontalGroup(
            pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_TimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_TonKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_NhomHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                        .addGroup(pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rad_NgungKinhDoanh)
                            .addComponent(rad_DangKinhDoanh)
                            .addComponent(rad_HetHang)
                            .addComponent(rad_ConHang))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                        .addGroup(pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                                .addGroup(pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rad_TatCa)
                                    .addComponent(rad_DuoiDinhMucTonKho)
                                    .addComponent(rad_VuotDinhMucTonKho))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cmb_NhomHang, 0, 372, Short.MAX_VALUE)
                            .addComponent(cmb_NhaCungCap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_TimTheoTenHoacMa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                        .addGap(14, 14, 14))))
        );
        pnl_CotTraiLayout.setVerticalGroup(
            pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                .addComponent(lbl_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_TimTheoTenHoacMa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmb_NhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_NhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmb_NhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_TonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_TatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_DuoiDinhMucTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_VuotDinhMucTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_ConHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_HetHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_DangKinhDoanh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad_NgungKinhDoanh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_TieuDe.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl_TieuDe.setForeground(new java.awt.Color(51, 51, 255));
        lbl_TieuDe.setText("DANH SÁCH SẢN PHẨM");

        tbl_DanhSachSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl_DanhSachSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Mã sản phẩm", "Tên sản phẩm", "ĐVT", "Giá vốn", "Giá bán", "Tồn kho"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_DanhSachSanPham.setRowHeight(35);
        tbl_DanhSachSanPham.setRowMargin(3);
        tbl_DanhSachSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DanhSachSanPhamMouseClicked(evt);
            }
        });
        tbl_DanhSachSanPham.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbl_DanhSachSanPhamPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_DanhSachSanPham);

        btn_NgungKinhDoanh.setBackground(new java.awt.Color(51, 51, 255));
        btn_NgungKinhDoanh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_NgungKinhDoanh.setForeground(new java.awt.Color(255, 255, 255));
        btn_NgungKinhDoanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconPause.png"))); // NOI18N
        btn_NgungKinhDoanh.setText("NGƯNG KINH DOANH");
        btn_NgungKinhDoanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_NgungKinhDoanhMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_NgungKinhDoanhMouseExited(evt);
            }
        });
        btn_NgungKinhDoanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NgungKinhDoanhActionPerformed(evt);
            }
        });

        btn_ThemMoi.setBackground(new java.awt.Color(255, 51, 0));
        btn_ThemMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_ThemMoi.setForeground(new java.awt.Color(255, 255, 255));
        btn_ThemMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconThemSanPham.png"))); // NOI18N
        btn_ThemMoi.setText("THÊM MỚI");
        btn_ThemMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ThemMoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ThemMoiMouseExited(evt);
            }
        });
        btn_ThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_CotPhaiLayout = new javax.swing.GroupLayout(pnl_CotPhai);
        pnl_CotPhai.setLayout(pnl_CotPhaiLayout);
        pnl_CotPhaiLayout.setHorizontalGroup(
            pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                        .addComponent(lbl_TieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                        .addComponent(btn_NgungKinhDoanh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ThemMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_CotPhaiLayout.setVerticalGroup(
            pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ThemMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_NgungKinhDoanh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_TieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_CotTrai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnl_CotPhai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_CotTrai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_CotPhai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_TimTheoTenHoacMaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_TimTheoTenHoacMaFocusGained
        if (txt_TimTheoTenHoacMa.getText().equals("Tìm kiếm theo mã hàng, tên hàng")) {
            txt_TimTheoTenHoacMa.setText("");
            txt_TimTheoTenHoacMa.setForeground(new Color(0, 0, 0));
        }
        cmb_NhaCungCap.setSelectedIndex(0);
        cmb_NhomHang.setSelectedIndex(0);
        rad_TatCa.setSelected(true);
    }//GEN-LAST:event_txt_TimTheoTenHoacMaFocusGained

    private void txt_TimTheoTenHoacMaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_TimTheoTenHoacMaFocusLost
        if (txt_TimTheoTenHoacMa.getText().equals("")) {
            txt_TimTheoTenHoacMa.setText("Tìm kiếm theo mã hàng, tên hàng");
            txt_TimTheoTenHoacMa.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_txt_TimTheoTenHoacMaFocusLost

    private void btn_NgungKinhDoanhMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_NgungKinhDoanhMouseEntered
        // TODO add your handling code here:
        btn_NgungKinhDoanh.setBackground(Color.yellow);
        btn_NgungKinhDoanh.setForeground(Color.blue);
        btn_NgungKinhDoanh.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_NgungKinhDoanhMouseEntered

    private void btn_NgungKinhDoanhMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_NgungKinhDoanhMouseExited
        // TODO add your handling code here:
        btn_NgungKinhDoanh.setBackground(new Color(51, 51, 255));
        btn_NgungKinhDoanh.setForeground(Color.white);
    }//GEN-LAST:event_btn_NgungKinhDoanhMouseExited

    private void btn_NgungKinhDoanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NgungKinhDoanhActionPerformed
        // TODO add your handling code here:
        ngungKinhDoanh();
    }//GEN-LAST:event_btn_NgungKinhDoanhActionPerformed

    private void btn_ThemMoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemMoiMouseEntered
        // TODO add your handling code here:
        btn_ThemMoi.setBackground(Color.yellow);
        btn_ThemMoi.setForeground(Color.blue);
        btn_ThemMoi.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_ThemMoiMouseEntered

    private void btn_ThemMoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemMoiMouseExited
        // TODO add your handling code here:
        btn_ThemMoi.setBackground(new Color(255, 51, 0));
        btn_ThemMoi.setForeground(Color.white);
    }//GEN-LAST:event_btn_ThemMoiMouseExited

    private void btn_ThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemMoiActionPerformed
        // TODO add your handling code here:
        new ThemMoiSanPhamJFrame().setVisible(true);
    }//GEN-LAST:event_btn_ThemMoiActionPerformed

    private void rad_TatCaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_TatCaItemStateChanged
        // TODO add your handling code here:
        if (rad_TatCa.isSelected()) {
            capnhatDuLieu();
        }
    }//GEN-LAST:event_rad_TatCaItemStateChanged

    private void rad_DuoiDinhMucTonKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_DuoiDinhMucTonKhoItemStateChanged
        // TODO add your handling code here:
        if (rad_DuoiDinhMucTonKho.isSelected()) {
            locDuoiDinhMuc();
        }
    }//GEN-LAST:event_rad_DuoiDinhMucTonKhoItemStateChanged

    private void rad_VuotDinhMucTonKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_VuotDinhMucTonKhoItemStateChanged
        // TODO add your handling code here:
        if (rad_VuotDinhMucTonKho.isSelected()) {
            locVuotDinhMuc();
        }
    }//GEN-LAST:event_rad_VuotDinhMucTonKhoItemStateChanged

    private void rad_ConHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_ConHangItemStateChanged
        // TODO add your handling code here:
        if (rad_ConHang.isSelected()) {
            locConHang();
        }
    }//GEN-LAST:event_rad_ConHangItemStateChanged

    private void rad_HetHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_HetHangItemStateChanged
        // TODO add your handling code here:
        if (rad_HetHang.isSelected()) {
            locHetHang();
        }
    }//GEN-LAST:event_rad_HetHangItemStateChanged

    private void rad_DangKinhDoanhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_DangKinhDoanhItemStateChanged
        // TODO add your handling code here:
        if (rad_DangKinhDoanh.isSelected()) {
            locDangKinhDoanh();
        }
    }//GEN-LAST:event_rad_DangKinhDoanhItemStateChanged

    private void rad_NgungKinhDoanhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rad_NgungKinhDoanhItemStateChanged
        // TODO add your handling code here:
        if (rad_NgungKinhDoanh.isSelected()) {
            locNgungKinhDoanh();
        }
    }//GEN-LAST:event_rad_NgungKinhDoanhItemStateChanged

    private void txt_TimTheoTenHoacMaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimTheoTenHoacMaKeyReleased
        // TODO add your handling code here:
        timTheoMaHoacTen();
    }//GEN-LAST:event_txt_TimTheoTenHoacMaKeyReleased

    private void cmb_NhomHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_NhomHangItemStateChanged
        // TODO add your handling code here:
        locTheoNhomHang();
    }//GEN-LAST:event_cmb_NhomHangItemStateChanged

    private void cmb_NhaCungCapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_NhaCungCapItemStateChanged
        // TODO add your handling code here:
        locTheoNhaCungCap();
    }//GEN-LAST:event_cmb_NhaCungCapItemStateChanged

    private void tbl_DanhSachSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DanhSachSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            capnhatSanPham();    
        }
    }//GEN-LAST:event_tbl_DanhSachSanPhamMouseClicked

    private void tbl_DanhSachSanPhamPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbl_DanhSachSanPhamPropertyChange
        // TODO add your handling code here:
        taoDanhSachDangChon();
    }//GEN-LAST:event_tbl_DanhSachSanPhamPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DanhSachSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DanhSachSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DanhSachSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DanhSachSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DanhSachSanPhamJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btg_TonKho;
    private javax.swing.JButton btn_NgungKinhDoanh;
    private javax.swing.JButton btn_ThemMoi;
    private javax.swing.JComboBox<String> cmb_NhaCungCap;
    private javax.swing.JComboBox<String> cmb_NhomHang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_NhomHang;
    private javax.swing.JLabel lbl_TieuDe;
    private javax.swing.JLabel lbl_TimKiem;
    private javax.swing.JLabel lbl_TonKho;
    private javax.swing.JPanel pnl_CotPhai;
    private javax.swing.JPanel pnl_CotTrai;
    private javax.swing.JRadioButton rad_ConHang;
    private javax.swing.JRadioButton rad_DangKinhDoanh;
    private javax.swing.JRadioButton rad_DuoiDinhMucTonKho;
    private javax.swing.JRadioButton rad_HetHang;
    private javax.swing.JRadioButton rad_NgungKinhDoanh;
    private javax.swing.JRadioButton rad_TatCa;
    private javax.swing.JRadioButton rad_VuotDinhMucTonKho;
    private javax.swing.JTable tbl_DanhSachSanPham;
    private javax.swing.JTextField txt_TimTheoTenHoacMa;
    // End of variables declaration//GEN-END:variables

    NhomHangDAO NhomHangDAO = new NhomHangDAO();
    NhaCungCapDAO NCCDAO = new NhaCungCapDAO();
    SanPhamDAO SanPhamDAO = new SanPhamDAO();
    DonViTinhDAO DVTDAO = new DonViTinhDAO();
    
    // Định dạng hiển thị số tiền:
    DecimalFormat dcf = new DecimalFormat("###,###,###.###");
    
    // list chua maSP duoc chon de ngung kinh doanh
    static List<String> listNgungKD = new ArrayList<>();
    
    /*
     * Hàm khởi tạo các giá trị ban đầu cho JFrame
     */
    void inIt() {
        this.setSize(1366, 768);
        this.setMinimumSize(new Dimension(1366, 768));
        this.setMaximumSize(new Dimension(1366, 768));
        setResizable(false);
        setLocationRelativeTo(null);
        doNhomHang();
        doNCC();
        capnhatDuLieu();
        btn_NgungKinhDoanh.setVisible(false);
    }
    
    /*
     * Hàm này đổ danh sách nhóm hàng vào combobox ở tab DanhSachSanPham
     */
    void doNhomHang() {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_NhomHang.getModel();
        dcm.removeAllElements();
        try {
            List<NhomHang> ListNH = NhomHangDAO.select();
            dcm.addElement("Tất cả");
            for (NhomHang NH : ListNH) {
                dcm.addElement(NH);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn: " + e.toString());
        }
    }
    
    /*
     * Hàm này đổ danh sách Nhà cung cấp vào combobox
     */
    void doNCC() {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_NhaCungCap.getModel();
        dcm.removeAllElements();
        try {
            List<NhaCungCap> ListNCC = NCCDAO.select();
            dcm.addElement("Tất cả");
            for (NhaCungCap NCC : ListNCC) {
                dcm.addElement(NCC);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn: " + e.toString());
        }
    }
    
    /*
     * Hàm cập nhật dữ liệu Sản Phẩm
     */
    void capnhatDuLieu(){
        try {
            List<SanPham> listSP = SanPhamDAO.select();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm đổ dữ liệu vào bảng
     */
    void doDuLieuVaoBang(List<SanPham> listSP) throws SQLException{
        DefaultTableModel dtm = (DefaultTableModel) tbl_DanhSachSanPham.getModel();
        dtm.setRowCount(0);
        for(SanPham SP : listSP){
            DonViTinh DVT = DVTDAO.timTheoMa(SP.getMaDVT());
            Object[] row = {false, 
                            SP.getMaSanPham(),
                            SP.getTenSanPham(),
                            DVT.getMoTa(),
                            dcf.format(SP.getGiaVon()),
                            dcf.format(SP.getGiaBan()),
                            SP.getTonKho()
                            };
            dtm.addRow(row);
        }
    }
    
    /*
     * Hàm lọc sản phẩm dưới định mức tồn kho
     */
    void locDuoiDinhMuc() {
        try {
            List<SanPham> listSP = SanPhamDAO.locDuoiDinhMuc();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc sản phẩm vượt định mức tồn kho
     */
    void locVuotDinhMuc() {
        try {
            List<SanPham> listSP = SanPhamDAO.locVuotDinhMuc();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc sản phẩm còn hàng
     */
    void locConHang() {
        try {
            List<SanPham> listSP = SanPhamDAO.locConHang();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc sản phẩm hết hàng
     */
    void locHetHang() {
        try {
            List<SanPham> listSP = SanPhamDAO.locHetHang();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc sản phẩm đang kinh doanh
     */
    void locDangKinhDoanh() {
        try {
            List<SanPham> listSP = SanPhamDAO.locDangKinhDoanh();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc sản phẩm ngừng kinh doanh
     */
    void locNgungKinhDoanh() {
        try {
            List<SanPham> listSP = SanPhamDAO.locNgungKinhDoanh();
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm tìm sản phẩm theo mã hoặc tên
     */
    void timTheoMaHoacTen() {
        String ChuoiTimKiem = txt_TimTheoTenHoacMa.getText();
        try {
            List<SanPham> listSP = SanPhamDAO.timTheoMaHoacTen(ChuoiTimKiem);
            doDuLieuVaoBang(listSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm lọc SP theo nhà cung cấp (chọn từ combobox)
     */
    void locTheoNhaCungCap() {
        if (cmb_NhaCungCap.getSelectedIndex() == 0) {
            capnhatDuLieu();
        }
        else {
            NhaCungCap NCC = (NhaCungCap) cmb_NhaCungCap.getSelectedItem();
            try {
                List<SanPham> listSP = SanPhamDAO.timTheoNCC(NCC.getMaNCC());
                doDuLieuVaoBang(listSP);
            } catch (Exception e) {
                DialogHelper.alert(this, "Có lỗi: " + e.toString());
            }
        }
    }
    
    /*
     * Hàm lọc SP theo nhóm hàng (chọn từ combobox)
     */
    void locTheoNhomHang() {
        if (cmb_NhomHang.getSelectedIndex() == 0) {
            capnhatDuLieu();
        }
        else {
            try {
                NhomHang NH = (NhomHang) cmb_NhomHang.getSelectedItem();
                List<SanPham> listSP = SanPhamDAO.timTheoMaNhom(NH.getMaNhomHang());
                doDuLieuVaoBang(listSP);
            } catch (Exception e) {
                DialogHelper.alert(this, "Có lỗi: " + e.toString());
            }
        }
    }
    
    /*
     * Hàm tạo danh sách các sản phẩm đang được chọn trên table
     */
    void taoDanhSachDangChon() {
        int i = tbl_DanhSachSanPham.getSelectedRow();
        if(i >= 0){
            String MaSP = tbl_DanhSachSanPham.getValueAt(i, 1).toString();
            if((Boolean)tbl_DanhSachSanPham.getValueAt(i, 0)){
                if(!(listNgungKD.indexOf(MaSP) >= 0)) {
                    listNgungKD.add(MaSP);
                }
            }
            else {
                if((listNgungKD.indexOf(MaSP) >= 0)){
                    listNgungKD.remove(MaSP);
                }
            }
        }
        if (!listNgungKD.isEmpty()) {
            btn_NgungKinhDoanh.setVisible(true);
        }
        else {
            btn_NgungKinhDoanh.setVisible(false);
        }
    }
    
    /*
     * Hàm cập nhật trạng thái ngưng kinh doanh cho SP
     */
    void ngungKinhDoanh() {
        if(DialogHelper.confirm(this, "Chuyển trạng thái ngưng kinh doanh cho các sản phẩm này?")) {
            try {
                int i = 0;
                for(String MaSP : listNgungKD) {
                    i = SanPhamDAO.ngungKinhDoanh(MaSP);
                }
                if(i > 0) {
                    DialogHelper.alert(this, "Cập nhật thành công");
                    listNgungKD.clear();
                    btn_NgungKinhDoanh.setVisible(false);
                    capnhatDuLieu();
                }
                else {
                    DialogHelper.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                DialogHelper.alert(this, "Có lỗi: " + e.toString());
            }
        }
    }
    
    /*
     * Hàm truyền model SanPham vào frame Cập nhật và mở fram cập nhật
     */
    void capnhatSanPham() {
        try {
            int index = tbl_DanhSachSanPham.getSelectedRow();
            String MaSP = tbl_DanhSachSanPham.getValueAt(index, 1).toString();
            SanPham SP = SanPhamDAO.timTheoMaSP(MaSP);
            new CapNhatSanPhamJFrame(SP).setVisible(true);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
}

