/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.quanly.sanpham.dssanpham;

import dao.DonViTinhDAO;
import dao.NhaCungCapDAO;
import dao.NhomHangDAO;
import dao.SanPhamDAO;
import helper.DialogHelper;
import helper.ShareHelper;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import model.DonViTinh;
import model.NhaCungCap;
import model.NhomHang;
import model.SanPham;

/**
 *
 * @author Phu Phan
 */
public class CapNhatSanPhamJFrame extends javax.swing.JFrame {
    
    private static SanPham model;

    /**
     * Creates new form CapNhatSanPhamJFrame
     */
    public CapNhatSanPhamJFrame(SanPham model) {
        initComponents();
        this.model = model;
        inIt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_MaSanPham = new javax.swing.JLabel();
        txt_MaVach = new javax.swing.JTextField();
        lbl_NhaCungCap = new javax.swing.JLabel();
        txt_MaSanPham = new javax.swing.JTextField();
        lbl_TenSanPham = new javax.swing.JLabel();
        cmb_NhomHang = new javax.swing.JComboBox<>();
        lbl_NhomHang = new javax.swing.JLabel();
        txt_TenSanPham = new javax.swing.JTextField();
        cmb_NhaCungCap = new javax.swing.JComboBox<>();
        lbl_MaVach = new javax.swing.JLabel();
        lbl_TonKho = new javax.swing.JLabel();
        lbl_DonViTinh = new javax.swing.JLabel();
        txt_TonKho = new javax.swing.JTextField();
        lbl_DinhMucTonLonNhat = new javax.swing.JLabel();
        txt_DinhMucTonLonNhat = new javax.swing.JTextField();
        lbl_DinhMucTonNhoNhat = new javax.swing.JLabel();
        txt_DinhMucTonNhoNhat = new javax.swing.JTextField();
        lbl_GiaVon = new javax.swing.JLabel();
        txt_GiaVon = new javax.swing.JTextField();
        lbl_GiaBan = new javax.swing.JLabel();
        txt_GiaBan = new javax.swing.JTextField();
        lbl_HinhAnh = new javax.swing.JLabel();
        lbl_Hinh = new javax.swing.JLabel();
        chk_KhongDuocPhepBan = new javax.swing.JCheckBox();
        lbl_HanSuDungGanNhat = new javax.swing.JLabel();
        lbl_HanSuDungMoi = new javax.swing.JLabel();
        dat_HSDMoi = new com.toedter.calendar.JDateChooser();
        dat_HSDGanNhat = new com.toedter.calendar.JDateChooser();
        cmb_DonViTinh = new javax.swing.JComboBox<>();
        btn_Luu = new javax.swing.JButton();
        btn_NhapLai = new javax.swing.JButton();
        btn_ChonAnh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CẬP NHẬT SẢN PHẨM");
        setMinimumSize(new java.awt.Dimension(1366, 635));
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 635));

        lbl_MaSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_MaSanPham.setForeground(new java.awt.Color(0, 0, 153));
        lbl_MaSanPham.setText("Mã sản phẩm");

        txt_MaVach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_MaVach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MaVachActionPerformed(evt);
            }
        });
        txt_MaVach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MaVachKeyTyped(evt);
            }
        });

        lbl_NhaCungCap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_NhaCungCap.setForeground(new java.awt.Color(0, 0, 153));
        lbl_NhaCungCap.setText("Nhà cung cấp");

        txt_MaSanPham.setEditable(false);
        txt_MaSanPham.setBackground(new java.awt.Color(255, 255, 204));
        txt_MaSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lbl_TenSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TenSanPham.setForeground(new java.awt.Color(0, 0, 153));
        lbl_TenSanPham.setText("Tên sản phẩm");

        cmb_NhomHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_NhomHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_NhomHangActionPerformed(evt);
            }
        });

        lbl_NhomHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_NhomHang.setForeground(new java.awt.Color(0, 0, 153));
        lbl_NhomHang.setText("Nhóm hàng");

        txt_TenSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TenSanPham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_TenSanPhamFocusLost(evt);
            }
        });
        txt_TenSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TenSanPhamKeyTyped(evt);
            }
        });

        cmb_NhaCungCap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lbl_MaVach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_MaVach.setForeground(new java.awt.Color(0, 0, 153));
        lbl_MaVach.setText("Mã vạch");

        lbl_TonKho.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TonKho.setForeground(new java.awt.Color(0, 0, 153));
        lbl_TonKho.setText("Tồn kho");

        lbl_DonViTinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_DonViTinh.setForeground(new java.awt.Color(0, 0, 153));
        lbl_DonViTinh.setText("ĐVT");

        txt_TonKho.setEditable(false);
        txt_TonKho.setBackground(new java.awt.Color(255, 255, 204));
        txt_TonKho.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TonKho.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_TonKho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TonKhoKeyTyped(evt);
            }
        });

        lbl_DinhMucTonLonNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_DinhMucTonLonNhat.setForeground(new java.awt.Color(0, 0, 153));
        lbl_DinhMucTonLonNhat.setText("Định mức tồn lớn nhất");

        txt_DinhMucTonLonNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_DinhMucTonLonNhat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_DinhMucTonLonNhat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_DinhMucTonLonNhatFocusLost(evt);
            }
        });
        txt_DinhMucTonLonNhat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DinhMucTonLonNhatKeyTyped(evt);
            }
        });

        lbl_DinhMucTonNhoNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_DinhMucTonNhoNhat.setForeground(new java.awt.Color(0, 0, 153));
        lbl_DinhMucTonNhoNhat.setText("Định mức tồn nhỏ nhất");

        txt_DinhMucTonNhoNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_DinhMucTonNhoNhat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_DinhMucTonNhoNhat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_DinhMucTonNhoNhatFocusLost(evt);
            }
        });
        txt_DinhMucTonNhoNhat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DinhMucTonNhoNhatKeyTyped(evt);
            }
        });

        lbl_GiaVon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_GiaVon.setForeground(new java.awt.Color(0, 0, 153));
        lbl_GiaVon.setText("Giá vốn");

        txt_GiaVon.setEditable(false);
        txt_GiaVon.setBackground(new java.awt.Color(255, 255, 204));
        txt_GiaVon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_GiaVon.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_GiaVon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_GiaVonFocusLost(evt);
            }
        });
        txt_GiaVon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_GiaVonKeyTyped(evt);
            }
        });

        lbl_GiaBan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_GiaBan.setForeground(new java.awt.Color(0, 0, 153));
        lbl_GiaBan.setText("Giá bán");

        txt_GiaBan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_GiaBan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_GiaBan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_GiaBanFocusLost(evt);
            }
        });
        txt_GiaBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_GiaBanKeyTyped(evt);
            }
        });

        lbl_HinhAnh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_HinhAnh.setForeground(new java.awt.Color(0, 0, 153));
        lbl_HinhAnh.setText("Hình ảnh");

        lbl_Hinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_Hinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Hinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chk_KhongDuocPhepBan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chk_KhongDuocPhepBan.setForeground(new java.awt.Color(153, 0, 0));
        chk_KhongDuocPhepBan.setText("Không được phép bán");

        lbl_HanSuDungGanNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_HanSuDungGanNhat.setForeground(new java.awt.Color(0, 0, 153));
        lbl_HanSuDungGanNhat.setText("Hạn sử dụng gần nhất");

        lbl_HanSuDungMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_HanSuDungMoi.setForeground(new java.awt.Color(0, 0, 153));
        lbl_HanSuDungMoi.setText("Hạn sử dụng mới");

        dat_HSDMoi.setForeground(new java.awt.Color(0, 0, 153));
        dat_HSDMoi.setDateFormatString("dd/MM/yyyy");
        dat_HSDMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        dat_HSDGanNhat.setForeground(new java.awt.Color(0, 0, 153));
        dat_HSDGanNhat.setDateFormatString("dd/MM/yyyy");
        dat_HSDGanNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmb_DonViTinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btn_Luu.setBackground(new java.awt.Color(255, 51, 0));
        btn_Luu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Luu.setForeground(new java.awt.Color(255, 255, 255));
        btn_Luu.setText("LƯU");
        btn_Luu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_LuuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_LuuMouseExited(evt);
            }
        });
        btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LuuActionPerformed(evt);
            }
        });

        btn_NhapLai.setBackground(new java.awt.Color(51, 51, 255));
        btn_NhapLai.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_NhapLai.setForeground(new java.awt.Color(255, 255, 255));
        btn_NhapLai.setText("NHẬP LẠI");
        btn_NhapLai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_NhapLaiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_NhapLaiMouseExited(evt);
            }
        });
        btn_NhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NhapLaiActionPerformed(evt);
            }
        });

        btn_ChonAnh.setBackground(new java.awt.Color(51, 51, 255));
        btn_ChonAnh.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btn_ChonAnh.setForeground(new java.awt.Color(255, 255, 255));
        btn_ChonAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconAddImage.png"))); // NOI18N
        btn_ChonAnh.setText("Chọn ảnh");
        btn_ChonAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ChonAnhMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ChonAnhMouseExited(evt);
            }
        });
        btn_ChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChonAnhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbl_TenSanPham)
                        .addComponent(lbl_MaVach, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_NhomHang)
                        .addComponent(lbl_NhaCungCap)
                        .addComponent(cmb_NhomHang, 0, 408, Short.MAX_VALUE)
                        .addComponent(txt_MaSanPham)
                        .addComponent(cmb_NhaCungCap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_TenSanPham)
                        .addComponent(txt_MaVach))
                    .addComponent(lbl_MaSanPham))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chk_KhongDuocPhepBan, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_TonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_TonKho))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_DonViTinh)
                                    .addComponent(cmb_DonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_GiaBan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_GiaVon, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_DinhMucTonLonNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_DinhMucTonNhoNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_DinhMucTonLonNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_DinhMucTonNhoNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_GiaVon, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(lbl_GiaBan))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_HanSuDungGanNhat)
                            .addComponent(lbl_HanSuDungMoi)
                            .addComponent(lbl_HinhAnh)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dat_HSDGanNhat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dat_HSDMoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbl_Hinh, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_ChonAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(13, 13, 13))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_NhapLai, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_TonKho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_DonViTinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_HinhAnh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lbl_Hinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmb_DonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_TonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_DinhMucTonLonNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_DinhMucTonLonNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_MaVach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_DinhMucTonNhoNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_MaVach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_DinhMucTonNhoNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btn_ChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_NhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_GiaVon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_HanSuDungMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmb_NhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_GiaVon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dat_HSDMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_HanSuDungGanNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_NhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_GiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dat_HSDGanNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmb_NhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_GiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(chk_KhongDuocPhepBan)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_NhapLai, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_NhomHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_NhomHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_NhomHangActionPerformed

    private void btn_LuuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_LuuMouseEntered
        // TODO add your handling code here:
        btn_Luu.setBackground(Color.yellow);
        btn_Luu.setForeground(Color.blue);
        btn_Luu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_LuuMouseEntered

    private void btn_LuuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_LuuMouseExited
        // TODO add your handling code here:
        btn_Luu.setBackground(new Color(255, 51, 0));
        btn_Luu.setForeground(Color.white);
    }//GEN-LAST:event_btn_LuuMouseExited

    private void btn_LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LuuActionPerformed
        // TODO add your handling code here:
        capnhatSanPham();
    }//GEN-LAST:event_btn_LuuActionPerformed

    private void btn_NhapLaiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_NhapLaiMouseEntered
        // TODO add your handling code here:
        btn_NhapLai.setBackground(Color.yellow);
        btn_NhapLai.setForeground(Color.blue);
        btn_NhapLai.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_NhapLaiMouseEntered

    private void btn_NhapLaiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_NhapLaiMouseExited
        // TODO add your handling code here:
        btn_NhapLai.setBackground(new Color(51, 51, 255));
        btn_NhapLai.setForeground(Color.white);
    }//GEN-LAST:event_btn_NhapLaiMouseExited

    private void btn_NhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NhapLaiActionPerformed
        // TODO add your handling code here:
        xoaThongTin();
    }//GEN-LAST:event_btn_NhapLaiActionPerformed

    private void txt_MaVachKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MaVachKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_MaVach.getText().length() == 13 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_MaVachKeyTyped

    private void txt_TenSanPhamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TenSanPhamKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_TenSanPham.getText().length() == 50){
            evt.consume();
        }
    }//GEN-LAST:event_txt_TenSanPhamKeyTyped

    private void txt_TonKhoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TonKhoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_TonKho.getText().length() == 3 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_TonKhoKeyTyped

    private void txt_DinhMucTonLonNhatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DinhMucTonLonNhatKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_DinhMucTonLonNhat.getText().length() == 3 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_DinhMucTonLonNhatKeyTyped

    private void txt_DinhMucTonNhoNhatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DinhMucTonNhoNhatKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_DinhMucTonNhoNhat.getText().length() == 3 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_DinhMucTonNhoNhatKeyTyped

    private void txt_GiaVonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GiaVonKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_GiaVon.getText().length() == 9 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_GiaVonKeyTyped

    private void txt_GiaBanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GiaBanKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(txt_GiaBan.getText().length() == 9 || !(Character.isDigit(c)) || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txt_GiaBanKeyTyped

    private void txt_TenSanPhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_TenSanPhamFocusLost
        // TODO add your handling code here:
        if (!checkTenSanPham()) 
            txt_TenSanPham.setBackground(Color.yellow);
        else
            txt_TenSanPham.setBackground(Color.white);
    }//GEN-LAST:event_txt_TenSanPhamFocusLost

    private void txt_DinhMucTonLonNhatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_DinhMucTonLonNhatFocusLost
        // TODO add your handling code here:
        if (!checkDinhMucLon()) 
            txt_DinhMucTonLonNhat.setBackground(Color.yellow);
        else 
            txt_DinhMucTonLonNhat.setBackground(Color.white);
    }//GEN-LAST:event_txt_DinhMucTonLonNhatFocusLost

    private void txt_DinhMucTonNhoNhatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_DinhMucTonNhoNhatFocusLost
        // TODO add your handling code here:
        if (!checkDinhMucNho()) 
            txt_DinhMucTonNhoNhat.setBackground(Color.yellow);
        else 
            txt_DinhMucTonNhoNhat.setBackground(Color.white);
    }//GEN-LAST:event_txt_DinhMucTonNhoNhatFocusLost

    private void txt_GiaVonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_GiaVonFocusLost
        // TODO add your handling code here:
        if (!checkGiaVon()) 
            txt_GiaVon.setBackground(Color.yellow);
        else 
            txt_GiaVon.setBackground(Color.white);
    }//GEN-LAST:event_txt_GiaVonFocusLost

    private void txt_GiaBanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_GiaBanFocusLost
        // TODO add your handling code here:
        if (!checkGiaBan()) 
            txt_GiaBan.setBackground(Color.yellow);
        else 
            txt_GiaBan.setBackground(Color.white);
    }//GEN-LAST:event_txt_GiaBanFocusLost

    private void txt_MaVachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MaVachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MaVachActionPerformed

    private void btn_ChonAnhMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChonAnhMouseEntered
        // TODO add your handling code here:
        btn_ChonAnh.setBackground(Color.yellow);
        btn_ChonAnh.setForeground(Color.blue);
        btn_ChonAnh.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_ChonAnhMouseEntered

    private void btn_ChonAnhMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChonAnhMouseExited
        // TODO add your handling code here:
        btn_ChonAnh.setBackground(new Color(51, 51, 255));
        btn_ChonAnh.setForeground(Color.white);
    }//GEN-LAST:event_btn_ChonAnhMouseExited

    private void btn_ChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChonAnhActionPerformed
        // TODO add your handling code here:
        chonAnh();
    }//GEN-LAST:event_btn_ChonAnhActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CapNhatSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CapNhatSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CapNhatSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CapNhatSanPhamJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CapNhatSanPhamJFrame(model).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ChonAnh;
    private javax.swing.JButton btn_Luu;
    private javax.swing.JButton btn_NhapLai;
    private javax.swing.JCheckBox chk_KhongDuocPhepBan;
    private javax.swing.JComboBox<String> cmb_DonViTinh;
    private javax.swing.JComboBox<String> cmb_NhaCungCap;
    private javax.swing.JComboBox<String> cmb_NhomHang;
    private com.toedter.calendar.JDateChooser dat_HSDGanNhat;
    private com.toedter.calendar.JDateChooser dat_HSDMoi;
    private javax.swing.JLabel lbl_DinhMucTonLonNhat;
    private javax.swing.JLabel lbl_DinhMucTonNhoNhat;
    private javax.swing.JLabel lbl_DonViTinh;
    private javax.swing.JLabel lbl_GiaBan;
    private javax.swing.JLabel lbl_GiaVon;
    private javax.swing.JLabel lbl_HanSuDungGanNhat;
    private javax.swing.JLabel lbl_HanSuDungMoi;
    private javax.swing.JLabel lbl_Hinh;
    private javax.swing.JLabel lbl_HinhAnh;
    private javax.swing.JLabel lbl_MaSanPham;
    private javax.swing.JLabel lbl_MaVach;
    private javax.swing.JLabel lbl_NhaCungCap;
    private javax.swing.JLabel lbl_NhomHang;
    private javax.swing.JLabel lbl_TenSanPham;
    private javax.swing.JLabel lbl_TonKho;
    private javax.swing.JTextField txt_DinhMucTonLonNhat;
    private javax.swing.JTextField txt_DinhMucTonNhoNhat;
    private javax.swing.JTextField txt_GiaBan;
    private javax.swing.JTextField txt_GiaVon;
    private javax.swing.JTextField txt_MaSanPham;
    private javax.swing.JTextField txt_MaVach;
    private javax.swing.JTextField txt_TenSanPham;
    private javax.swing.JTextField txt_TonKho;
    // End of variables declaration//GEN-END:variables

    SanPhamDAO SanPhamDAO = new SanPhamDAO();
    NhomHangDAO NhomHangDAO = new NhomHangDAO();
    NhaCungCapDAO NCCDAO = new NhaCungCapDAO();
    DonViTinhDAO DVTDAO = new DonViTinhDAO();
    
    /*
     * Hàm khởi tạo các giá trị ban đầu cho JFrame
     */
    void inIt() {
        this.setSize(1366, 635);
        this.setMinimumSize(new Dimension(1366, 635));
        this.setMaximumSize(new Dimension(1366, 635));
        setResizable(false);
        setLocationRelativeTo(null);
        doThongTin();
    }
    
    /*
     * Hàm tự động đổ các ttin maSP, nhóm hàng, NCC, ĐVT lên textfield/combobox
     */
    void doThongTin(){
        try {
            doNhomHang();
            doNCC();
            doDVT();
            doThongTinSP();
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    void doThongTinSP() throws SQLException {
        txt_MaSanPham.setText(model.getMaSanPham());
        txt_TenSanPham.setText(model.getTenSanPham());
        txt_MaVach.setText(model.getMaVach());
        txt_TonKho.setText(model.getTonKho()+"");
        txt_DinhMucTonLonNhat.setText(model.getDinhMucLonNhat()+"");
        txt_DinhMucTonNhoNhat.setText(model.getDinhMucNhoNhat()+"");
        txt_GiaBan.setText(model.getGiaBan()+"");
        txt_GiaVon.setText(model.getGiaVon()+"");
        dat_HSDMoi.setDate(model.getHSDMoiNhat());
        dat_HSDGanNhat.setDate(model.getHSDTruoc());
        chk_KhongDuocPhepBan.setSelected(!model.getTrangThai());
        
        // đổ hình ảnh lên lbl_Hinh:
        String FileAnh = model.getHinhAnh();
        lbl_Hinh.setIcon(new ImageIcon(ShareHelper.docAnh(FileAnh).getImage().getScaledInstance(270, 220, java.awt.Image.SCALE_SMOOTH)));
        lbl_Hinh.setToolTipText(FileAnh);
        
        // Đổ thông tin nhóm hàng:
        String MaNH = model.getMaNhomHang();
        NhomHang NH = NhomHangDAO.timTheoMa(MaNH);
        cmb_NhomHang.getModel().setSelectedItem(NH);
        
        // Đổ thông tin NCC:
        String MaNCC = model.getMaNCC();
        NhaCungCap NCC = NCCDAO.timTheoMa(MaNCC);
        cmb_NhaCungCap.getModel().setSelectedItem(NCC);
        
        // Đổ thông tin ĐVT:
        int MaDVT = model.getMaDVT();
        DonViTinh DVT = DVTDAO.timTheoMa(MaDVT);
        cmb_DonViTinh.getModel().setSelectedItem(DVT);
    }

    void doNhomHang() throws SQLException {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_NhomHang.getModel();
        dcm.removeAllElements();
        List<NhomHang> listNH = NhomHangDAO.select();
        for (NhomHang NH : listNH) {
            dcm.addElement(NH);
        }
    }
    
    void doNCC() throws SQLException {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_NhaCungCap.getModel();
        dcm.removeAllElements();
        List<NhaCungCap> listNCC = NCCDAO.select();
        for (NhaCungCap NCC : listNCC) {
            dcm.addElement(NCC);    
        }
    }
    
    void doDVT() throws SQLException {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_DonViTinh.getModel();
        dcm.removeAllElements();
        List<DonViTinh> listDVT = DVTDAO.select();
        for (DonViTinh DVT : listDVT) {
            dcm.addElement(DVT);    
        }
    }
    
    /*
     * Hàm xoá thông tin để nhập lại
     */
    void xoaThongTin() {
        doThongTin();
        txt_TenSanPham.setBackground(Color.white);
        txt_MaVach.setBackground(Color.white);
        txt_DinhMucTonLonNhat.setBackground(Color.white);
        txt_DinhMucTonNhoNhat.setBackground(Color.white);
        txt_GiaBan.setBackground(Color.white);
        ((JTextField)dat_HSDMoi.getDateEditor().getUiComponent()).setBackground(Color.white);
        ((JTextField)dat_HSDGanNhat.getDateEditor().getUiComponent()).setBackground(Color.white);
    }
    
    /*
     * Hàm check tên sản phẩm
           - ký tự tối thiểu: 5
           - ký tự tối đa: 50 (đã bắt lỗi trực tiếp event KeyTyped)
     */
    boolean checkTenSanPham() {
        String TenSanPham = txt_TenSanPham.getText();
        if (TenSanPham.length() < 5)
            return false;
        else
            return true;
    }
    
    /*
     * Hàm check định mức tồn nhỏ nhất
           - không được để trống
     */
    boolean checkDinhMucNho() {
        if (txt_DinhMucTonNhoNhat.getText().length() < 1)
            return false;
        else
            return true;
    }
    
    /*
     * Hàm check định mức tồn lớn nhất
           - không được để trống
     */
    boolean checkDinhMucLon() {
        if (txt_DinhMucTonLonNhat.getText().length() < 1)
            return false;
        else
            return true;
    }
    
    /*
     * Hàm check giá vốn
           - không được để trống
           - tối thiểu 3 chữ số 
     */
    boolean checkGiaVon() {
        if (txt_GiaVon.getText().length() < 3)
            return false;
        else
            return true;
    }
    
    /*
     * Hàm check giá bán
           - không được để trống
           - tối thiểu 4 chữ số 
     */
    boolean checkGiaBan() {
        if (txt_GiaBan.getText().length() < 4)
            return false;
        else
            return true;
    }
    
    /*
     * Hàm kiểm tổng lỗi trước khi thêm sản phẩm
     */
    boolean kiemLoi() {
        if (checkTenSanPham() && checkDinhMucNho() && checkDinhMucLon() && checkGiaBan() && checkGiaVon())
            return true;
        else
            return false;
    }
    
    /*
     * Hàm tạo model Sản Phẩm để thêm vào database
     */
    SanPham taoModel() {
        SanPham SP = new SanPham();
        String MaNhomHang = ((NhomHang) cmb_NhomHang.getSelectedItem()).getMaNhomHang();
        String MaNCC = ((NhaCungCap) cmb_NhaCungCap.getSelectedItem()).getMaNCC();
        int MaDVT = ((DonViTinh) cmb_DonViTinh.getSelectedItem()).getMaDVT();
        SP.setMaSanPham(txt_MaSanPham.getText().trim());
        SP.setTenSanPham(txt_TenSanPham.getText());
        SP.setMaVach(txt_MaVach.getText());
        SP.setMaNhomHang(MaNhomHang);
        SP.setMaNCC(MaNCC);
        SP.setMaDVT(MaDVT);
        // SP.setTonKho(0);
        SP.setDinhMucNhoNhat(Integer.parseInt(txt_DinhMucTonNhoNhat.getText()));
        SP.setDinhMucLonNhat(Integer.parseInt(txt_DinhMucTonLonNhat.getText()));
        // SP.setGiaVon(Float.parseFloat(txt_GiaVon.getText()));
        SP.setGiaBan(Float.parseFloat(txt_GiaBan.getText()));
        SP.setTrangThai(!chk_KhongDuocPhepBan.isSelected());
        SP.setHSDMoiNhat(dat_HSDMoi.getDate());
        SP.setHSDTruoc(dat_HSDGanNhat.getDate());
        // kiểm tra ảnh sản phẩm trước khi thêm thuộc tính ảnh:
        if (lbl_Hinh.getIcon() != null)
            SP.setHinhAnh(txt_MaSanPham.getText().toLowerCase() + ".jpg");
        else
            SP.setHinhAnh("default.jpg");
        return SP;
    }
    
    /*
     * Hàm cập nhật sản phẩm và cập nhật lại frame DanhSachSanPham
     */
    void capnhatSanPham() {
        try {
            if(kiemLoi()){
                SanPham model = taoModel();
                int rs = SanPhamDAO.capnhatSP(model);
                if(rs != 0){
                    DialogHelper.alert(this, "Cập nhật thành công");
                    this.dispose();
                    if(capnhatFrameDSSP()){
                        new DanhSachSanPhamJFrame().setVisible(true);
                    }
                }
                else {
                    DialogHelper.alert(this, "Cập nhật thất bại");
                }
            }
            else {
                DialogHelper.alert(this, "Kiểm tra lại thông tin");
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi cập nhật sản phẩm: " + e.toString());
        }
    }
    
    /*
     * Hàm reload lại frame DANH SÁCH SP để cập nhật SP mới
     */
    boolean capnhatFrameDSSP(){
        Frame[] listFrames = Frame.getFrames();
        for (Frame fr : listFrames) {
            String tenFrame = fr.getClass().getName();
            if (tenFrame.equalsIgnoreCase("ui.quanly.sanpham.dssanpham.DanhSachSanPhamJFrame")) {
                fr.dispose();
                return true;
            }
        }
        return false;
    }
    
    /*
     * Hàm chọn ảnh cho sản phẩm
     */
    void chonAnh() {
        String tenAnh = txt_MaSanPham.getText();
        if (!tenAnh.isEmpty()) {
            JFileChooser fileChooser = new JFileChooser();
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                String fileType = file.getName().substring(file.getName().lastIndexOf("."), file.getName().length());
                if (fileType.equalsIgnoreCase(".jpg")) {
                    String newFileName = (tenAnh + fileType).toLowerCase();
                    if (ShareHelper.luuAnh(file, newFileName)) {
                        lbl_Hinh.setIcon(new ImageIcon(ShareHelper.docAnh(newFileName).getImage().getScaledInstance(270, 220, java.awt.Image.SCALE_SMOOTH)));
                        lbl_Hinh.setToolTipText(newFileName);
                    }
                } else {
                    DialogHelper.alert(this, "Chỉ được chọn ảnh có địng dạng .jpg");
                }
            }
        } else {
            DialogHelper.alert(this, "Kiểm tra lại mã sản phẩm");
        }
    }
}

