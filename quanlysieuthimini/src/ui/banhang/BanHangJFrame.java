/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.banhang;

import dao.HoaDonChiTietDAO;
import dao.HoaDonDAO;
import dao.KhachHangDAO;
import dao.NhomHangDAO;
import dao.SanPhamDAO;
import helper.ButtonEditor;
import helper.ButtonRenderer;
import helper.DateHelper;
import helper.DialogHelper;
import helper.ShareHelper;
import helper.jdbcHelper;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import model.HoaDon;
import model.HoaDonChiTiet;
import model.KhachHang;
import model.NhomHang;
import model.SanPham;
import ui.DangNhapJFrame;
import ui.chung.ThemMoiKhachHangJFrame;
import ui.chung.ThongTinTaiKhoanJFrame;

/**
 *
 * @author Administrator
 */
public class BanHangJFrame extends javax.swing.JFrame {

    /**
     * Creates new form BanHangJFrame
     */
    public BanHangJFrame() {
        initComponents();
        inIt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_CotTrai = new javax.swing.JPanel();
        tab_ThongTinSanPham = new javax.swing.JTabbedPane();
        pnl_DonHang = new javax.swing.JPanel();
        txt_NhapThongTin = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_ChiTietDonHang = new javax.swing.JTable();
        btn_XoaDanhSach = new javax.swing.JButton();
        btn_CapNhatDanhSach = new javax.swing.JButton();
        pnl_DanhSachSanPham = new javax.swing.JPanel();
        cmb_NhomHang = new javax.swing.JComboBox<>();
        txt_TimKiemSanPham = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_DanhSachSanPham = new javax.swing.JTable();
        pnl_CotPhai = new javax.swing.JPanel();
        lbl_ThongTinHoaDon = new javax.swing.JLabel();
        txt_TimKhachHang = new javax.swing.JTextField();
        lbl_NhanVien = new javax.swing.JLabel();
        txt_TenNhanVien = new javax.swing.JTextField();
        lbl_TongSoLuong = new javax.swing.JLabel();
        txt_TongSoLuong = new javax.swing.JTextField();
        lbl_TongThanhTien = new javax.swing.JLabel();
        txt_TongThanhTien = new javax.swing.JTextField();
        lbl_ChietKhau = new javax.swing.JLabel();
        txt_ChietKhau = new javax.swing.JTextField();
        lbl_VAT = new javax.swing.JLabel();
        lbl_TongCong = new javax.swing.JLabel();
        txt_TongCong = new javax.swing.JTextField();
        lbl_TienKhachTra = new javax.swing.JLabel();
        txt_TienKhachTra = new javax.swing.JTextField();
        lbl_TienThua = new javax.swing.JLabel();
        txt_TienThua = new javax.swing.JTextField();
        cmb_VAT = new javax.swing.JComboBox<>();
        lbl_DiemThuong = new javax.swing.JLabel();
        txt_DiemThuong = new javax.swing.JTextField();
        btn_ThanhToan = new javax.swing.JButton();
        btn_ThemKhachHang = new javax.swing.JButton();
        btn_XemDiemThuong = new javax.swing.JButton();
        btn_XoaThongTin = new javax.swing.JButton();
        pnl_ThanhTrangThai = new javax.swing.JPanel();
        lbl_TenPhanMem = new javax.swing.JLabel();
        lbl_NgayThangNam = new javax.swing.JLabel();
        lbl_DongHo = new javax.swing.JLabel();
        mnb_BanHangMenu = new javax.swing.JMenuBar();
        mnu_TaiKhoan = new javax.swing.JMenu();
        mni_ThongTinTaiKhoan = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mni_DangXuat = new javax.swing.JMenuItem();
        mni_Thoat = new javax.swing.JMenuItem();
        mnu_ThongKeTrongNgay = new javax.swing.JMenu();
        mni_DanhSachDonHang = new javax.swing.JMenuItem();
        mni_TongKetCuoiNgay = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SuperSALES - GIAO DIỆN BÁN HÀNG");

        pnl_CotTrai.setBackground(new java.awt.Color(255, 255, 255));

        tab_ThongTinSanPham.setBackground(new java.awt.Color(204, 255, 204));
        tab_ThongTinSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pnl_DonHang.setBackground(new java.awt.Color(204, 204, 255));
        pnl_DonHang.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, new java.awt.Color(153, 153, 153)));

        txt_NhapThongTin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_NhapThongTin.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_NhapThongTinCaretUpdate(evt);
            }
        });

        tbl_ChiTietDonHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl_ChiTietDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng", "Thành tiền", "Thao tác"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_ChiTietDonHang.setRowHeight(35);
        tbl_ChiTietDonHang.setRowMargin(3);
        tbl_ChiTietDonHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_ChiTietDonHangMouseClicked(evt);
            }
        });
        tbl_ChiTietDonHang.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbl_ChiTietDonHangPropertyChange(evt);
            }
        });
        tbl_ChiTietDonHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_ChiTietDonHangKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_ChiTietDonHang);
        if (tbl_ChiTietDonHang.getColumnModel().getColumnCount() > 0) {
            tbl_ChiTietDonHang.getColumnModel().getColumn(5).setHeaderValue("Thành tiền");
            tbl_ChiTietDonHang.getColumnModel().getColumn(6).setResizable(false);
            tbl_ChiTietDonHang.getColumnModel().getColumn(6).setHeaderValue("Thao tác");
        }

        btn_XoaDanhSach.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_XoaDanhSach.setForeground(new java.awt.Color(255, 255, 255));
        btn_XoaDanhSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/removeGioHang.png"))); // NOI18N
        btn_XoaDanhSach.setToolTipText("Xoá hết sản phẩm trong đơn hàng");
        btn_XoaDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_XoaDanhSachMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_XoaDanhSachMouseExited(evt);
            }
        });
        btn_XoaDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaDanhSachActionPerformed(evt);
            }
        });

        btn_CapNhatDanhSach.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_CapNhatDanhSach.setForeground(new java.awt.Color(255, 255, 255));
        btn_CapNhatDanhSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refreshGioHang.png"))); // NOI18N
        btn_CapNhatDanhSach.setToolTipText("Cập nhật lại đơn hàng");
        btn_CapNhatDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_CapNhatDanhSachMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_CapNhatDanhSachMouseExited(evt);
            }
        });
        btn_CapNhatDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatDanhSachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_DonHangLayout = new javax.swing.GroupLayout(pnl_DonHang);
        pnl_DonHang.setLayout(pnl_DonHangLayout);
        pnl_DonHangLayout.setHorizontalGroup(
            pnl_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
                    .addGroup(pnl_DonHangLayout.createSequentialGroup()
                        .addComponent(txt_NhapThongTin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_XoaDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_CapNhatDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_DonHangLayout.setVerticalGroup(
            pnl_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DonHangLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnl_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_NhapThongTin)
                        .addComponent(btn_XoaDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_CapNhatDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab_ThongTinSanPham.addTab("Đơn hàng", pnl_DonHang);

        pnl_DanhSachSanPham.setBackground(new java.awt.Color(255, 255, 204));
        pnl_DanhSachSanPham.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(153, 153, 153)));

        cmb_NhomHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_NhomHang.setMaximumRowCount(20);

        txt_TimKiemSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TimKiemSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_TimKiemSanPhamKeyPressed(evt);
            }
        });

        tbl_DanhSachSanPham.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl_DanhSachSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Hình ảnh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_DanhSachSanPham.setRowHeight(110);
        tbl_DanhSachSanPham.setRowMargin(3);
        tbl_DanhSachSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DanhSachSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_DanhSachSanPham);

        javax.swing.GroupLayout pnl_DanhSachSanPhamLayout = new javax.swing.GroupLayout(pnl_DanhSachSanPham);
        pnl_DanhSachSanPham.setLayout(pnl_DanhSachSanPhamLayout);
        pnl_DanhSachSanPhamLayout.setHorizontalGroup(
            pnl_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DanhSachSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_DanhSachSanPhamLayout.createSequentialGroup()
                        .addComponent(cmb_NhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_TimKiemSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnl_DanhSachSanPhamLayout.setVerticalGroup(
            pnl_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DanhSachSanPhamLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnl_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmb_NhomHang)
                    .addComponent(txt_TimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab_ThongTinSanPham.addTab("Danh sách sản phẩm", pnl_DanhSachSanPham);

        javax.swing.GroupLayout pnl_CotTraiLayout = new javax.swing.GroupLayout(pnl_CotTrai);
        pnl_CotTrai.setLayout(pnl_CotTraiLayout);
        pnl_CotTraiLayout.setHorizontalGroup(
            pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_ThongTinSanPham)
                .addContainerGap())
        );
        pnl_CotTraiLayout.setVerticalGroup(
            pnl_CotTraiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotTraiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_ThongTinSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_CotPhai.setBackground(new java.awt.Color(204, 204, 255));
        pnl_CotPhai.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbl_ThongTinHoaDon.setBackground(new java.awt.Color(255, 0, 0));
        lbl_ThongTinHoaDon.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_ThongTinHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ThongTinHoaDon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ThongTinHoaDon.setText("THÔNG TIN HOÁ ĐƠN");
        lbl_ThongTinHoaDon.setOpaque(true);

        txt_TimKhachHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TimKhachHang.setForeground(new java.awt.Color(204, 204, 204));
        txt_TimKhachHang.setText("Tìm khách hàng");
        txt_TimKhachHang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_TimKhachHangFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_TimKhachHangFocusLost(evt);
            }
        });
        txt_TimKhachHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_TimKhachHangKeyPressed(evt);
            }
        });

        lbl_NhanVien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_NhanVien.setText("Nhân viên");

        txt_TenNhanVien.setEditable(false);
        txt_TenNhanVien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lbl_TongSoLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TongSoLuong.setText("Tổng số lượng");

        txt_TongSoLuong.setEditable(false);
        txt_TongSoLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TongSoLuong.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_TongThanhTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TongThanhTien.setText("Tổng thành tiền");

        txt_TongThanhTien.setEditable(false);
        txt_TongThanhTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TongThanhTien.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_TongThanhTien.setText("0");
        txt_TongThanhTien.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_TongThanhTienCaretUpdate(evt);
            }
        });

        lbl_ChietKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_ChietKhau.setText("Chiết khấu (%)");

        txt_ChietKhau.setEditable(false);
        txt_ChietKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_ChietKhau.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_ChietKhau.setText("0");
        txt_ChietKhau.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_ChietKhauCaretUpdate(evt);
            }
        });

        lbl_VAT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_VAT.setText("VAT");

        lbl_TongCong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TongCong.setText("Tổng cộng");

        txt_TongCong.setEditable(false);
        txt_TongCong.setBackground(new java.awt.Color(255, 255, 153));
        txt_TongCong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TongCong.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_TienKhachTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TienKhachTra.setText("Tiền khách trả");

        txt_TienKhachTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TienKhachTra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_TienKhachTra.setText("0");
        txt_TienKhachTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_TienKhachTraKeyPressed(evt);
            }
        });

        lbl_TienThua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_TienThua.setText("Tiền thừa");

        txt_TienThua.setEditable(false);
        txt_TienThua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_TienThua.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_TienThua.setText("0");

        cmb_VAT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_VAT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0%", "10%" }));
        cmb_VAT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_VATItemStateChanged(evt);
            }
        });

        lbl_DiemThuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_DiemThuong.setText("Điểm thưởng");

        txt_DiemThuong.setEditable(false);
        txt_DiemThuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_DiemThuong.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_DiemThuong.setText("0");

        btn_ThanhToan.setBackground(new java.awt.Color(204, 0, 0));
        btn_ThanhToan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_ThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btn_ThanhToan.setText("THANH TOÁN (F1)");
        btn_ThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ThanhToanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ThanhToanMouseExited(evt);
            }
        });
        btn_ThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThanhToanActionPerformed(evt);
            }
        });

        btn_ThemKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/themKhachHang.png"))); // NOI18N
        btn_ThemKhachHang.setToolTipText("Thêm mới khách hàng");
        btn_ThemKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ThemKhachHangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ThemKhachHangMouseExited(evt);
            }
        });
        btn_ThemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemKhachHangActionPerformed(evt);
            }
        });

        btn_XemDiemThuong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gift.png"))); // NOI18N
        btn_XemDiemThuong.setToolTipText("Chọn mức chiết khấu");
        btn_XemDiemThuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_XemDiemThuongMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_XemDiemThuongMouseExited(evt);
            }
        });
        btn_XemDiemThuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XemDiemThuongActionPerformed(evt);
            }
        });

        btn_XoaThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/new.png"))); // NOI18N
        btn_XoaThongTin.setToolTipText("Xoá thông tin khách giao dịch");
        btn_XoaThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_XoaThongTinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_XoaThongTinMouseExited(evt);
            }
        });
        btn_XoaThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaThongTinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_CotPhaiLayout = new javax.swing.GroupLayout(pnl_CotPhai);
        pnl_CotPhai.setLayout(pnl_CotPhaiLayout);
        pnl_CotPhaiLayout.setHorizontalGroup(
            pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_ThongTinHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                            .addComponent(lbl_DiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(txt_DiemThuong))
                        .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                            .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_TongCong)
                                .addComponent(lbl_TienKhachTra)
                                .addComponent(lbl_TienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_TienKhachTra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                .addComponent(txt_TongCong)
                                .addComponent(txt_TienThua)))
                        .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                            .addComponent(lbl_TongThanhTien)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_TongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                            .addComponent(lbl_TongSoLuong)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_TongSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CotPhaiLayout.createSequentialGroup()
                            .addComponent(lbl_NhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                            .addComponent(txt_TenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CotPhaiLayout.createSequentialGroup()
                            .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_ChietKhau)
                                .addComponent(lbl_VAT, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_XemDiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_ChietKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                .addComponent(cmb_VAT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                        .addComponent(txt_TimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ThemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_XoaThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CotPhaiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_ThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_CotPhaiLayout.setVerticalGroup(
            pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CotPhaiLayout.createSequentialGroup()
                .addComponent(lbl_ThongTinHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_TimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ThemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_XoaThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_NhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TongSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TongSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_ChietKhau)
                    .addComponent(lbl_ChietKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_XemDiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_VAT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_VAT, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TongCong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TongCong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_CotPhaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_DiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_DiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_ThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_ThanhTrangThai.setBackground(new java.awt.Color(51, 0, 204));
        pnl_ThanhTrangThai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        lbl_TenPhanMem.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lbl_TenPhanMem.setForeground(new java.awt.Color(255, 255, 255));
        lbl_TenPhanMem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_TenPhanMem.setText("SuperSALES - Phần mềm quản lý bán hàng");

        lbl_NgayThangNam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_NgayThangNam.setForeground(new java.awt.Color(255, 255, 255));
        lbl_NgayThangNam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconCalendar.png"))); // NOI18N
        lbl_NgayThangNam.setText("dd-MM-yyyy");

        lbl_DongHo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_DongHo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_DongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconClock.png"))); // NOI18N
        lbl_DongHo.setText("hh:mm:ss");

        javax.swing.GroupLayout pnl_ThanhTrangThaiLayout = new javax.swing.GroupLayout(pnl_ThanhTrangThai);
        pnl_ThanhTrangThai.setLayout(pnl_ThanhTrangThaiLayout);
        pnl_ThanhTrangThaiLayout.setHorizontalGroup(
            pnl_ThanhTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ThanhTrangThaiLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_TenPhanMem, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_NgayThangNam, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_DongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnl_ThanhTrangThaiLayout.setVerticalGroup(
            pnl_ThanhTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ThanhTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbl_TenPhanMem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_NgayThangNam, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lbl_DongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mnb_BanHangMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mnb_BanHangMenu.setMargin(new java.awt.Insets(0, 0, 0, 15));

        mnu_TaiKhoan.setText("Tài Khoản");
        mnu_TaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mnu_TaiKhoan.setMargin(new java.awt.Insets(0, 0, 0, 30));

        mni_ThongTinTaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mni_ThongTinTaiKhoan.setText("Thông tin tài khoản");
        mni_ThongTinTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_ThongTinTaiKhoanActionPerformed(evt);
            }
        });
        mnu_TaiKhoan.add(mni_ThongTinTaiKhoan);
        mnu_TaiKhoan.add(jSeparator1);

        mni_DangXuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        mni_DangXuat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mni_DangXuat.setText("Đăng xuất");
        mni_DangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_DangXuatActionPerformed(evt);
            }
        });
        mnu_TaiKhoan.add(mni_DangXuat);

        mni_Thoat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mni_Thoat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mni_Thoat.setText("Thoát");
        mni_Thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_ThoatActionPerformed(evt);
            }
        });
        mnu_TaiKhoan.add(mni_Thoat);

        mnb_BanHangMenu.add(mnu_TaiKhoan);

        mnu_ThongKeTrongNgay.setText("Thống Kê Trong Ngày");
        mnu_ThongKeTrongNgay.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mnu_ThongKeTrongNgay.setMargin(new java.awt.Insets(0, 0, 0, 30));

        mni_DanhSachDonHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mni_DanhSachDonHang.setText("Danh sách đơn hàng");
        mni_DanhSachDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_DanhSachDonHangActionPerformed(evt);
            }
        });
        mnu_ThongKeTrongNgay.add(mni_DanhSachDonHang);

        mni_TongKetCuoiNgay.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mni_TongKetCuoiNgay.setText("Tổng kết cuối ngày");
        mni_TongKetCuoiNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_TongKetCuoiNgayActionPerformed(evt);
            }
        });
        mnu_ThongKeTrongNgay.add(mni_TongKetCuoiNgay);

        mnb_BanHangMenu.add(mnu_ThongKeTrongNgay);

        setJMenuBar(mnb_BanHangMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_CotTrai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_CotPhai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnl_ThanhTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_CotPhai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_CotTrai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(pnl_ThanhTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mni_DangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_DangXuatActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_mni_DangXuatActionPerformed

    private void txt_TimKhachHangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_TimKhachHangFocusLost
        // TODO add your handling code here:
        if (txt_TimKhachHang.getText().equals("")) {
            txt_TimKhachHang.setText("Tìm khách hàng");
            txt_TimKhachHang.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_txt_TimKhachHangFocusLost

    private void txt_TimKhachHangFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_TimKhachHangFocusGained
        // TODO add your handling code here:
        if (txt_TimKhachHang.getText().equals("Tìm khách hàng")) {
            txt_TimKhachHang.setText("");
            txt_TimKhachHang.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txt_TimKhachHangFocusGained

    private void txt_TimKhachHangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimKhachHangKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            timKhachHang();
        }
    }//GEN-LAST:event_txt_TimKhachHangKeyPressed

    private void txt_TienKhachTraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TienKhachTraKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tinhTienThua();
        }
    }//GEN-LAST:event_txt_TienKhachTraKeyPressed

    private void txt_TongThanhTienCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_TongThanhTienCaretUpdate
        // TODO add your handling code here:
        tinhTongTien();
        tinhDiemThuong();
    }//GEN-LAST:event_txt_TongThanhTienCaretUpdate

    private void txt_NhapThongTinCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_NhapThongTinCaretUpdate
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                quetMaVachSanPham();
                demSoLuong();
            }
        });
    }//GEN-LAST:event_txt_NhapThongTinCaretUpdate

    private void txt_TimKiemSanPhamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimKiemSanPhamKeyPressed
        // TODO add your handling code here:
        timSanPham();
    }//GEN-LAST:event_txt_TimKiemSanPhamKeyPressed

    private void btn_ThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThanhToanActionPerformed
        // TODO add your handling code here:
        xuatHoaDon();
    }//GEN-LAST:event_btn_ThanhToanActionPerformed

    private void btn_ThanhToanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThanhToanMouseEntered
        // TODO add your handling code here:
        btn_ThanhToan.setBackground(Color.yellow);
        btn_ThanhToan.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btn_ThanhToan.setForeground(Color.blue);
    }//GEN-LAST:event_btn_ThanhToanMouseEntered

    private void btn_ThanhToanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThanhToanMouseExited
        // TODO add your handling code here:
        btn_ThanhToan.setBackground(new Color(204, 0, 0));
        btn_ThanhToan.setForeground(Color.white);
    }//GEN-LAST:event_btn_ThanhToanMouseExited

    private void btn_XoaDanhSachMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaDanhSachMouseEntered
        // TODO add your handling code here:
        btn_XoaDanhSach.setBackground(Color.yellow);
        btn_XoaDanhSach.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_XoaDanhSachMouseEntered

    private void btn_XoaDanhSachMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaDanhSachMouseExited
        // TODO add your handling code here:
        btn_XoaDanhSach.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_btn_XoaDanhSachMouseExited

    private void btn_XoaDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaDanhSachActionPerformed
        // TODO add your handling code here:
        xoaSanPhamDonHang();
        demSoLuong();
    }//GEN-LAST:event_btn_XoaDanhSachActionPerformed

    private void btn_ThemKhachHangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemKhachHangMouseEntered
        // TODO add your handling code here:
        btn_ThemKhachHang.setBackground(Color.yellow);
        btn_ThemKhachHang.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_ThemKhachHangMouseEntered

    private void btn_ThemKhachHangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemKhachHangMouseExited
        // TODO add your handling code here:
        btn_ThemKhachHang.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_btn_ThemKhachHangMouseExited

    private void btn_ThemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemKhachHangActionPerformed
        // TODO add your handling code here:
        themKhachHang();
    }//GEN-LAST:event_btn_ThemKhachHangActionPerformed

    private void btn_XemDiemThuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XemDiemThuongActionPerformed
        // TODO add your handling code here:
        chonChietKhau();
    }//GEN-LAST:event_btn_XemDiemThuongActionPerformed

    private void btn_XemDiemThuongMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XemDiemThuongMouseEntered
        // TODO add your handling code here:
        btn_XemDiemThuong.setBackground(Color.yellow);
        btn_XemDiemThuong.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_XemDiemThuongMouseEntered

    private void btn_XemDiemThuongMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XemDiemThuongMouseExited
        // TODO add your handling code here:
        btn_XemDiemThuong.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_btn_XemDiemThuongMouseExited

    private void btn_XoaThongTinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaThongTinMouseEntered
        // TODO add your handling code here:
        btn_XoaThongTin.setBackground(Color.yellow);
        btn_XoaThongTin.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_XoaThongTinMouseEntered

    private void btn_XoaThongTinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaThongTinMouseExited
        // TODO add your handling code here:
        btn_XoaThongTin.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_btn_XoaThongTinMouseExited

    private void btn_XoaThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaThongTinActionPerformed
        // TODO add your handling code here:
        xoaThongTinKhachGiaoDich();
    }//GEN-LAST:event_btn_XoaThongTinActionPerformed

    private void tbl_ChiTietDonHangPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbl_ChiTietDonHangPropertyChange
        // TODO add your handling code here:
        demSoLuong();
    }//GEN-LAST:event_tbl_ChiTietDonHangPropertyChange

    private void tbl_ChiTietDonHangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_ChiTietDonHangKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            capnhatDonHang();
            demSoLuong();
        }
    }//GEN-LAST:event_tbl_ChiTietDonHangKeyPressed

    private void btn_CapNhatDanhSachMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CapNhatDanhSachMouseEntered
        // TODO add your handling code here:
        if (btn_CapNhatDanhSach.getBackground() != Color.red) {
            btn_CapNhatDanhSach.setBackground(Color.yellow);
        }
        btn_CapNhatDanhSach.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_CapNhatDanhSachMouseEntered

    private void btn_CapNhatDanhSachMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CapNhatDanhSachMouseExited
        // TODO add your handling code here:
        if (btn_CapNhatDanhSach.getBackground() != Color.red) {
            btn_CapNhatDanhSach.setBackground(new Color(240, 240, 240));
        }
    }//GEN-LAST:event_btn_CapNhatDanhSachMouseExited

    private void btn_CapNhatDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatDanhSachActionPerformed
        // TODO add your handling code here:
        btn_CapNhatDanhSach.setBackground(new Color(240, 240, 240));
        capnhatDonHang();
    }//GEN-LAST:event_btn_CapNhatDanhSachActionPerformed

    private void tbl_ChiTietDonHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_ChiTietDonHangMouseClicked
        // TODO add your handling code here:
        btn_CapNhatDanhSach.setBackground(Color.red);
    }//GEN-LAST:event_tbl_ChiTietDonHangMouseClicked

    private void tbl_DanhSachSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DanhSachSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            themSanPhamThuCong();
        }
    }//GEN-LAST:event_tbl_DanhSachSanPhamMouseClicked

    private void txt_ChietKhauCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_ChietKhauCaretUpdate
        // TODO add your handling code here:
        tinhTongTien();
    }//GEN-LAST:event_txt_ChietKhauCaretUpdate

    private void mni_ThongTinTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_ThongTinTaiKhoanActionPerformed
        // TODO add your handling code here:
        // nhớ xét role trước khi bật
        new ThongTinTaiKhoanJFrame().setVisible(true);
    }//GEN-LAST:event_mni_ThongTinTaiKhoanActionPerformed

    private void mni_DanhSachDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_DanhSachDonHangActionPerformed
        // TODO add your handling code here:
        new DanhSachDonHangJFrame().setVisible(true);
    }//GEN-LAST:event_mni_DanhSachDonHangActionPerformed

    private void mni_ThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_ThoatActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_mni_ThoatActionPerformed

    private void mni_TongKetCuoiNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_TongKetCuoiNgayActionPerformed
        // TODO add your handling code here:
        new TongKetCuoiNgayJFrame().setVisible(true);
    }//GEN-LAST:event_mni_TongKetCuoiNgayActionPerformed

    private void cmb_VATItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_VATItemStateChanged
        // TODO add your handling code here:
        tinhTongTien();
    }//GEN-LAST:event_cmb_VATItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanHangJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhatDanhSach;
    private javax.swing.JButton btn_ThanhToan;
    private javax.swing.JButton btn_ThemKhachHang;
    private javax.swing.JButton btn_XemDiemThuong;
    private javax.swing.JButton btn_XoaDanhSach;
    private javax.swing.JButton btn_XoaThongTin;
    private javax.swing.JComboBox<String> cmb_NhomHang;
    private javax.swing.JComboBox<String> cmb_VAT;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lbl_ChietKhau;
    private javax.swing.JLabel lbl_DiemThuong;
    private javax.swing.JLabel lbl_DongHo;
    private javax.swing.JLabel lbl_NgayThangNam;
    private javax.swing.JLabel lbl_NhanVien;
    private javax.swing.JLabel lbl_TenPhanMem;
    private javax.swing.JLabel lbl_ThongTinHoaDon;
    private javax.swing.JLabel lbl_TienKhachTra;
    private javax.swing.JLabel lbl_TienThua;
    private javax.swing.JLabel lbl_TongCong;
    private javax.swing.JLabel lbl_TongSoLuong;
    private javax.swing.JLabel lbl_TongThanhTien;
    private javax.swing.JLabel lbl_VAT;
    private javax.swing.JMenuBar mnb_BanHangMenu;
    private javax.swing.JMenuItem mni_DangXuat;
    private javax.swing.JMenuItem mni_DanhSachDonHang;
    private javax.swing.JMenuItem mni_Thoat;
    private javax.swing.JMenuItem mni_ThongTinTaiKhoan;
    private javax.swing.JMenuItem mni_TongKetCuoiNgay;
    private javax.swing.JMenu mnu_TaiKhoan;
    private javax.swing.JMenu mnu_ThongKeTrongNgay;
    private javax.swing.JPanel pnl_CotPhai;
    private javax.swing.JPanel pnl_CotTrai;
    private javax.swing.JPanel pnl_DanhSachSanPham;
    private javax.swing.JPanel pnl_DonHang;
    private javax.swing.JPanel pnl_ThanhTrangThai;
    private javax.swing.JTabbedPane tab_ThongTinSanPham;
    private javax.swing.JTable tbl_ChiTietDonHang;
    private javax.swing.JTable tbl_DanhSachSanPham;
    private javax.swing.JTextField txt_ChietKhau;
    private javax.swing.JTextField txt_DiemThuong;
    private javax.swing.JTextField txt_NhapThongTin;
    private javax.swing.JTextField txt_TenNhanVien;
    private javax.swing.JTextField txt_TienKhachTra;
    private javax.swing.JTextField txt_TienThua;
    private javax.swing.JTextField txt_TimKhachHang;
    private javax.swing.JTextField txt_TimKiemSanPham;
    private javax.swing.JTextField txt_TongCong;
    private javax.swing.JTextField txt_TongSoLuong;
    private javax.swing.JTextField txt_TongThanhTien;
    // End of variables declaration//GEN-END:variables

    KhachHangDAO KhachHangDAO = new KhachHangDAO();
    SanPhamDAO SanPhamDAO = new SanPhamDAO();
    NhomHangDAO NhomHangDAO = new NhomHangDAO();
    HoaDonDAO HoaDonDAO = new HoaDonDAO();
    HoaDonChiTietDAO HDCTDAO = new HoaDonChiTietDAO();
    
    // Hàm định dạng hiển thị số tiền
    DecimalFormat dcf = new DecimalFormat("###,###,###.###");

    /*
     * Hàm này thiết lập các thuộc tính của giao diện
     */
    void inIt() {
        // start code setSize cố định không cho co giãn lung tung:
        this.setSize(1366, 768);
        this.setMinimumSize(new Dimension(1366, 768));
        this.setMaximumSize(new Dimension(1366, 768));
        // end code setSize
        setResizable(false);
        setLocationRelativeTo(null);
        startDongHo();
        doDanhSachSanPham();
        doNhomHang();
        hienKhachHang();
        hienNguoiDung();
        taoHoaDon();
        btn_ThanhToan.setMnemonic(KeyEvent.VK_F1);
        btn_XoaDanhSach.setMnemonic(KeyEvent.VK_F2);
        btn_CapNhatDanhSach.setMnemonic(KeyEvent.VK_F5);
        txt_NhapThongTin.requestFocus();
    }
    
    /*
     * Hàm khởi tạo đồng hồ 
     */
    void startDongHo(){
        lbl_NgayThangNam.setText(DateHelper.toString(DateHelper.now(), "dd-MM-yyyy"));
        new Timer(1000, new ActionListener() {
            SimpleDateFormat format = new SimpleDateFormat("hh:mm:ss a");
            @Override
            public void actionPerformed(ActionEvent e) {
                lbl_DongHo.setText(format.format(new Date()));
            }
        }).start();
    }
    
    /*
     * Hàm này đổ danh sách sản phẩm vào tab Danh Sách Sản Phẩm
     */
    void doDanhSachSanPham() {
        try {
            List<SanPham> ListSP = SanPhamDAO.locSanPhamDangBan();
            doDuLieuSanPham(ListSP);
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn: " + e.toString());
        }
    }

    /*
     * Hàm thao tác đổ dữ liệu lên bảng Sản Phẩm
     */
    void doDuLieuSanPham(List<SanPham> list) {
        String[] TenCot = {"#", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Hình ảnh"};
        DefaultTableModel dtm = new DefaultTableModel(null, TenCot) {
            // ghi đè kiểu của column để chuyển sang kiểu ImageIcon
            @Override
            public Class<?> getColumnClass(int column) {
                if (column == 4) {
                    return ImageIcon.class;
                }
                return Object.class;
            }
            // ghi đè không cho edit cell khi click vào dòng
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        dtm.setRowCount(0);
        int STT = 0;
        for (SanPham sp : list) {
            STT++;
            ImageIcon AnhSanPham = null;
            if (sp.getHinhAnh() != null) {
                AnhSanPham = new ImageIcon(new ImageIcon(System.getProperty("user.dir") + "/images/products/" + sp.getHinhAnh()).getImage().getScaledInstance(100, 100, java.awt.Image.SCALE_SMOOTH));
            }
            Object[] row = {
                STT,
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                dcf.format(sp.getGiaBan()),
                AnhSanPham
            };
            dtm.addRow(row);
        }
        tbl_DanhSachSanPham.setModel(dtm);
    }

    /*
     * Hàm này đổ danh sách nhóm hàng vào combobox ở tab DanhSachSanPham
     */
    void doNhomHang() {
        DefaultComboBoxModel dcm = (DefaultComboBoxModel) cmb_NhomHang.getModel();
        dcm.removeAllElements();
        try {
            List<NhomHang> ListNH = NhomHangDAO.select();
            dcm.addElement("Tất cả");
            for (NhomHang NH : ListNH) {
                dcm.addElement(NH);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn ở đây: " + e.toString());
        }
    }

    /*
     * Hàm tìm kiếm khách hàng theo SDT hoặc họ tên
     *    Nếu có kết quả thì đổ listKH đó vào frame Kết quả
     *    Nếu không có kết quả thì hiện dialog thông báo không tìm thấy
     */
    void timKhachHang() {
        String ChuoiTimKiem = txt_TimKhachHang.getText();
        if (ChuoiTimKiem.isEmpty()) {
            txt_TimKhachHang.requestFocus();
        } else {
            try {
                List<KhachHang> ListKH = KhachHangDAO.timKhachHang(ChuoiTimKiem);
                if (ListKH.isEmpty()) {
                    DialogHelper.alert(this, "Không tìm thấy khách hàng");
                } else {
                    new KetQuaTimKHJFrame(ListKH).setVisible(true);
                }
            } catch (Exception e) {
                DialogHelper.alert(this, "Có lỗi truy vấn!!!: " + e.toString());
            }
        }
    }

    /*
     * Hàm này để hiển thị thông tin khách giao dịch khi có kết quả truy vấn 
     */
    void hienKhachHang() {
        if (!(ShareHelper.KhachGiaoDich == null)) {
            String TenKhach = ShareHelper.KhachGiaoDich.getHoTen();
            txt_TimKhachHang.setForeground(new Color(0, 0, 0));
            txt_TimKhachHang.setText(TenKhach);
        }
    }

    /*
     * Hàm này để hiển thị frame thêm khách hàng khi khách có yêu cầu
     *    Nếu đang tồn tại KhachGiaoDich thì không được sử dụng chức năng này
     */
    void themKhachHang() {
        if (ShareHelper.KhachGiaoDich == null) {
            new ThemMoiKhachHangJFrame().setVisible(true);
        } else {
            DialogHelper.alert(this, "Đang trong phiên giao dịch, không được thêm mới Khách hàng");
        }
    }

    /*
     * Hàm này tạo mới Hoá Đơn giao dịch và nhận các thuộc tính truyền vào
     *    Mục đích: - lưu giữ thông tin hoá đơn khi load lại frame
                    - đẩy dữ liệu lên database
     *    Hoá đơn được clear và tạo mới instance khi bấm THANH TOÁN
     */
    void taoHoaDon() {
        if (ShareHelper.HoaDonGiaoDich == null) {
            ShareHelper.HoaDonGiaoDich = new HoaDon();
            ShareHelper.HoaDonGiaoDich.setMaNhanVien(txt_TenNhanVien.getText());
        } else {
            capnhatDonHang();
            capnhatChietKhau();
        }
    }

    /*
     * Hàm này tính giá trị tiền thừa trả lại cho khách
     * Sau đó truyền giá trị tiền khách trả vào hoá đơn đang giao dịch
     *    Nếu tiền thừa < 0 thì phát ra thông báo kiểm tra lại thông tin
     */
    void tinhTienThua() {
        float TienHoaDon = Float.parseFloat(txt_TongCong.getText());
        float TienKhachTra = Float.parseFloat(txt_TienKhachTra.getText());
        float TienThua = TienKhachTra - TienHoaDon;
        if (TienThua < 0) {
            DialogHelper.alert(this, "Kiểm tra lại tiền khách trả.");
            txt_TienKhachTra.requestFocus();
        } else {
            txt_TienThua.setText(TienThua + "");
            // truyền giá trị tiền khách trả vào hoá đơn giao dịch để đưa lên database
            ShareHelper.HoaDonGiaoDich.setTienKhachTra(TienKhachTra);
        }
    }

    /*
     * Hàm này tính điểm thưởng của hoá đơn theo quy định đổi điểm thưởng
     *    Biến ThanhTienHoaDon là giá trị hoá đơn chưa tính VAT và chiết khấu
     */
    void tinhDiemThuong() {
        if (!txt_TongThanhTien.getText().isEmpty()) {
            float ThanhTienHoaDon = Float.parseFloat(txt_TongThanhTien.getText());
            if (ThanhTienHoaDon >= 100000) {
                int DiemThuong = (int) Math.floor(ThanhTienHoaDon / 100000);
                txt_DiemThuong.setText(DiemThuong + "");
            } else {
                txt_DiemThuong.setText("0");
            }
        }
    }

    /*
     * Hàm này tìm sản phẩm sau khi nhận text từ ô tìm kiếm
           nếu là sản phẩm đang ngưng bán thì báo lỗi
     */
    void quetMaVachSanPham() {
        String ChuoiTimKiem = txt_NhapThongTin.getText();
        if (!ChuoiTimKiem.isEmpty()) {
            try {
                SanPham SP = SanPhamDAO.timTheoMaVach(ChuoiTimKiem);
                if (SP != null) {
                    if (SP.getTrangThai()) {
                        nhapSanPhamVaoDon(SP);    
                    }
                    else {
                        DialogHelper.alert(this, "Sản phẩm này đang ngừng kinh doanh. Thu hồi ngay");
                    }
                } else {
                    txt_NhapThongTin.setText("");
                    txt_NhapThongTin.requestFocus();
                }
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn: " + e.toString());
            }
        }
    }

    /*
     * Hàm này nhập sản phẩm vào hoá đơn
     *    - Thêm SP vào Hoá Đơn Giao Dịch để lưu và đẩy lên database
          - Đổ SP vào bảng danh sách đơn hàng tbl_ChiTietDonHang
     */
    void nhapSanPhamVaoDon(SanPham SP) {
        ShareHelper.HoaDonGiaoDich.themSP(SP, 1);
        duyetDanhSach(SP);
        txt_NhapThongTin.setText("");
        txt_NhapThongTin.requestFocus();
    }

    /*
     * Hàm này duyệt danh sách sản phẩm trong table trước khi add row
     *    - nếu sản phẩm đã có thì get số lượng và cộng 1; cập nhật lại thành tiền
          - nếu sản phẩm chưa có thì add row mới
     */
    void duyetDanhSach(SanPham SP) {
        boolean check = true; // biến kiểm tra để xét thêm mới hay cập nhật 
        // chạy vòng lặp duyệt từng dòng của bảng 
        for (int row = 0; row <= tbl_ChiTietDonHang.getRowCount() - 1; row++) {
            // xét mã sản phẩm nếu đã tồn tại thì cập nhật số lượng và thoát vòng lặp
            if (SP.getMaSanPham().equals(tbl_ChiTietDonHang.getValueAt(row, 1))) {
                int SoLuongMoi = Integer.parseInt(tbl_ChiTietDonHang.getValueAt(row, 4).toString()) + 1;
                // cập nhật lại số lượng
                tbl_ChiTietDonHang.setValueAt(SoLuongMoi, row, 4);
                // cập nhật lại thành tiền
                tbl_ChiTietDonHang.setValueAt(SoLuongMoi * SP.getGiaBan(), row, 5);
                check = false;
                return;
            }
        }
        if (check) {
            DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietDonHang.getModel();
            int STT = tbl_ChiTietDonHang.getRowCount() + 1;
            double ThanhTien = ShareHelper.HoaDonGiaoDich.getDSSP().get(SP) * SP.getGiaBan();
            Object[] addrow = {
                STT,
                SP.getMaSanPham(),
                SP.getTenSanPham(),
                dcf.format(SP.getGiaBan()),
                ShareHelper.HoaDonGiaoDich.getDSSP().get(SP),
                ThanhTien,
                "Xoá"
            };
            taoButtonXoa();
            dtm.addRow(addrow);
        }
    }

    /*
     * Hàm này tạo button XOÁ trong danh sách sản phẩm của đơn hàng
     */
    void taoButtonXoa() {
        tbl_ChiTietDonHang.getColumn("Thao tác").setCellRenderer(new ButtonRenderer());
        tbl_ChiTietDonHang.getColumn("Thao tác").setCellEditor(new ButtonEditor(new JCheckBox()));
        tbl_ChiTietDonHang.setPreferredScrollableViewportSize(tbl_ChiTietDonHang.getPreferredSize());
        tbl_ChiTietDonHang.getColumnModel().getColumn(6).setPreferredWidth(100);
    }

    /*
     * Hàm này xoá sản phẩm trong đơn hàng và trong danh sách TreeMap<SanPham,Integer>
     */
    void xoaSanPhamDonHang() {
        DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietDonHang.getModel();
        dtm.setRowCount(0);
        ShareHelper.HoaDonGiaoDich.getDSSP().clear();
    }

    /*
     * Hàm này tìm sản phẩm ở tab DANH SÁCH SẢN PHẨM
     */
    void timSanPham() {
        List<SanPham> list;
        // get tên nhóm hàng và mã nhóm hàng
        String TuyChonNhomHang = cmb_NhomHang.getSelectedItem().toString();
        // get chuỗi tìm kiếm
        String ChuoiTimKiem = txt_TimKiemSanPham.getText();
        // nếu chuỗi rỗng thì đổ tất cả sản phẩm theo mã nhóm
        if (ChuoiTimKiem.isEmpty()) {
            // nếu tên nhóm hàng là TẤT CẢ thì truy vấn tất cả
            if (TuyChonNhomHang.equalsIgnoreCase("Tất cả")) {
                try {
                    list = SanPhamDAO.select();
                    doDuLieuSanPham(list);
                } catch (Exception e) {
                    DialogHelper.alert(this, "Lỗi truy vấn:" + e.toString());
                }
            } else {
                try {
                    NhomHang NhomHang = NhomHangDAO.timMaNhom(TuyChonNhomHang);
                    String MaNhom = NhomHang.getMaNhomHang();
                    list = SanPhamDAO.timTheoMaNhom(MaNhom);
                    doDuLieuSanPham(list);
                } catch (Exception e) {
                    DialogHelper.alert(this, "Lỗi truy vấn:" + e.toString());
                }
            }
        } else {
            // nếu tên nhóm hàng là TẤT CẢ thì truy vấn tất cả
            if (TuyChonNhomHang.equalsIgnoreCase("Tất cả")) {
                try {
                    list = SanPhamDAO.timSanPhamTheoTen(ChuoiTimKiem);
                    doDuLieuSanPham(list);
                } catch (Exception e) {
                    DialogHelper.alert(this, "Lỗi truy vấn:" + e.toString());
                }
            } else {
                try {
                    NhomHang NhomHang = NhomHangDAO.timMaNhom(TuyChonNhomHang);
                    String MaNhom = NhomHang.getMaNhomHang();
                    list = SanPhamDAO.timKetHopNhomHang(ChuoiTimKiem, MaNhom);
                    if (list != null) {
                        doDuLieuSanPham(list);
                    }
                } catch (Exception e) {
                    DialogHelper.alert(this, "Lỗi truy vấn:" + e.toString());
                }
            }
        }
    }

    /*
     * Hàm này đếm tổng số lượng sản phẩm trong đơn hàng
     *     và tính tổng tiền để điền vào textfield
     */
    void demSoLuong() {
        int demSoLuong = 0;
        float tongThanhTien = 0;
        for (int i = 0; i < tbl_ChiTietDonHang.getRowCount(); i++) {
            int SoLuong = Integer.parseInt(tbl_ChiTietDonHang.getValueAt(i, 4).toString());
            float ThanhTien = Float.parseFloat(tbl_ChiTietDonHang.getValueAt(i, 5).toString());
            tongThanhTien += ThanhTien;
            demSoLuong += SoLuong;
        }
        txt_TongSoLuong.setText(demSoLuong + "");
        txt_TongThanhTien.setText(tongThanhTien + "");
    }

    /* 
     * Hàm cập nhật thông tin sản phẩm trong đơn hàng
     *    1. Cập nhật Key & Value trong DSSP trước
     *    2. Duyệt TreeMap DSSP và đổ dữ liệu lên lại tbl_ChiTietDonHang
     *    3. Cập nhật lại số lượng và thành tiền
     */
    void capnhatDonHang() {
        if(!ShareHelper.HoaDonGiaoDich.getDSSP().isEmpty()){
            // duyệt các dòng trong table để put lại số lượng của SP trong TreeMap
            for (int i = 0; i < tbl_ChiTietDonHang.getRowCount(); i++) {
                String MaSP = tbl_ChiTietDonHang.getValueAt(i, 1).toString();
                int SoLuong = Integer.parseInt(tbl_ChiTietDonHang.getValueAt(i, 4).toString());
                SanPham putSP = SanPhamDAO.timTheoMaSP(MaSP);
                if (SoLuong == 0) {
                    // nếu số lượng nhập lại là 0 thì xoá sản phẩm khỏi TreeMap
                    ShareHelper.HoaDonGiaoDich.getDSSP().remove(putSP);
                } else {
                    ShareHelper.HoaDonGiaoDich.getDSSP().put(putSP, SoLuong);
                }
            }
            DefaultTableModel dtm = (DefaultTableModel) tbl_ChiTietDonHang.getModel();
            dtm.setRowCount(0);
            // duyệt TreeMap và đổ thông tin lên table 
            for (SanPham key : ShareHelper.HoaDonGiaoDich.getDSSP().keySet()) {
                int STT = tbl_ChiTietDonHang.getRowCount() + 1;
                Object[] addrow = {
                    STT,
                    key.getMaSanPham(),
                    key.getTenSanPham(),
                    key.getGiaBan(),
                    ShareHelper.HoaDonGiaoDich.getDSSP().get(key),
                    ShareHelper.HoaDonGiaoDich.getDSSP().get(key) * key.getGiaBan(),
                    "Xoá"
                };
                taoButtonXoa();
                dtm.addRow(addrow);
            }
            demSoLuong();
        }
    }

    /*
     * Hàm xoá thông tin khách giao dịch (để cập nhật lại thông tin nếu có sai sót)
           và xoá các thông tin: chiết khấu, tiền khách trả
     */
    void xoaThongTinKhachGiaoDich() {
        ShareHelper.KhachGiaoDich = null;
        txt_TimKhachHang.setText("Tìm khách hàng");
        txt_TimKhachHang.setForeground(new Color(204, 204, 204));
        ShareHelper.HoaDonGiaoDich.setChietKhau(0);
        txt_ChietKhau.setText("0");
        txt_TienKhachTra.setText("0");
    }

    /*
     * Hàm chọn và thêm sản phẩm thủ công từ tab DanhSachSanPham
     *    sử dụng khi sản phẩm không có mã vạch
     */
    void themSanPhamThuCong() {
        int index = tbl_DanhSachSanPham.getSelectedRow();
        String MaSP = tbl_DanhSachSanPham.getValueAt(index, 1).toString();
        SanPham SP = SanPhamDAO.timTheoMaSP(MaSP);
        nhapSanPhamVaoDon(SP);
        demSoLuong();
        tab_ThongTinSanPham.setSelectedIndex(0);
    }

    /*
     * Hàm xử lý khi click button chiết khấu
     *    - nếu khách lẻ thì không sử dụng được chức năng này
     *    - nếu chưa chọn khách hàng thì không sử dụng được chức năng này
     */
    void chonChietKhau() {
        if (ShareHelper.KhachGiaoDich == null) {
            DialogHelper.alert(this, "Vui lòng điền thông tin khách đang giao dịch");
        } else {
            if (ShareHelper.KhachGiaoDich.getMaKhachHang().equals("KH00000")) {
                DialogHelper.alert(this, "Khách lẻ không được áp dụng chiết khấu");
            } else {
                new ChietKhauJFrame(txt_TongThanhTien.getText()).setVisible(true);
            }
        }
    }
    
    /*
     * Hàm cập nhật chiết khấu của hoá đơn tạm đang giao dịch
     */
    void capnhatChietKhau(){
        if(ShareHelper.HoaDonGiaoDich.getChietKhau() > 0) {
            txt_ChietKhau.setText(ShareHelper.HoaDonGiaoDich.getChietKhau()+"");
        }
        else {
            txt_ChietKhau.setText("0");
        }
    }
    
    /*
     * Hàm tính tổng tiền thanh toán của hoá đơn
           đã bao gồm chiết khấu và VAT
     */
    void tinhTongTien(){
        float ThanhTien = 0;
        float ChietKhau = 0;
        if(!txt_TongThanhTien.getText().isEmpty()){
            ThanhTien = Float.parseFloat(txt_TongThanhTien.getText());
        }
        if(!txt_ChietKhau.getText().isEmpty()){
            ChietKhau = Float.parseFloat(txt_ChietKhau.getText());
        }
        float VAT = 0;
        if(cmb_VAT.getSelectedIndex() != 0){
           VAT = 0.1f;
        }
        float TongTien = (ThanhTien - ChietKhau) + (ThanhTien - ChietKhau)*VAT;
        txt_TongCong.setText(TongTien+"");
    }
    
    /*
     * Hàm đẩy dữ liệu lên database
           và có thể kết nối máy in để in hoá đơn
     */
    void xuatHoaDon(){
        // kiem tra cac thong tin can thiet
        if(xetDieuKien()){
            ShareHelper.HoaDonGiaoDich.setMaNhanVien(ShareHelper.NguoiDung.getTenDangNhap());
            // đưa thông tin hoá đơn lên database: hoá đơn -> hoá đơn chi tiết
            try {
                ShareHelper.HoaDonGiaoDich.setTongSoLuong(Integer.parseInt(txt_TongSoLuong.getText()));
                ShareHelper.HoaDonGiaoDich.setChietKhau(Float.parseFloat(txt_ChietKhau.getText()));
                if(cmb_VAT.getSelectedIndex() == 1){
                    ShareHelper.HoaDonGiaoDich.setVAT(10);
                }
                else {
                    ShareHelper.HoaDonGiaoDich.setVAT(0);
                }
                ShareHelper.HoaDonGiaoDich.setThanhTien(Float.parseFloat(txt_TongCong.getText()));
                ShareHelper.HoaDonGiaoDich.setTienKhachTra(Float.parseFloat(txt_TienKhachTra.getText()));
                int rs = HoaDonDAO.themHoaDon(ShareHelper.HoaDonGiaoDich);
                // nếu hoá đơn bị lỗi không thêm được thì không thêm HĐCT 
                // và không trừ tồn kho
                if(rs > 0){
                    themHDCT();
                    capnhatTonKho();
                }
                // cập nhật điểm thưởng khách hàng
                capnhatDiemThuong();
                // sau khi hoàn tất thao tác với database thì reload lại các thông tin
                DialogHelper.alert(this, "Đã hoàn tất thanh toán");
                // in hoá đơn cho khách
                inHoaDon();
                ShareHelper.HoaDonGiaoDich.getDSSP().clear();
                ShareHelper.HoaDonGiaoDich = null;
                ShareHelper.KhachGiaoDich = null;
                this.dispose();
                new BanHangJFrame().setVisible(true);
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn: " + e.toString());
            }
        }
        else {
            DialogHelper.alert(this, "Kiểm tra lại các thông tin");
        }
    }
    
    /*
     * Hàm này xét các điều kiện đảm bảo đúng trước khi thanh toán
     */
    boolean xetDieuKien(){
        boolean ketqua = true;
        // kiem tra co dien thong tin khach giao dich hay khong
        if(ShareHelper.KhachGiaoDich == null){
            ketqua = false;
        }
        // kiem tra nhan vien login chua
        if(ShareHelper.NguoiDung == null){
            ketqua = false;
        }
        // kiem tra da cap nhat lai don hang hay chua (De phong co thay doi)
        if(btn_CapNhatDanhSach.getBackground() == Color.red){
            ketqua = false;
        }
        // kiem tra trong list hoa don tam co san pham hay khong
        if(ShareHelper.HoaDonGiaoDich.getDSSP().isEmpty()){
            ketqua = false;
        }
        // kiem tra tien khach tra
        float TienKhachTra = Float.parseFloat(txt_TienKhachTra.getText());
        float TongCong = Float.parseFloat(txt_TongCong.getText());
        if(TienKhachTra < TongCong){
            ketqua = false;
        }
        return ketqua;
    }
    
    /*
     * Hàm đưa hoá đơn chi tiết lên database
     */
    static String MaHoaDon;
    void themHDCT() throws SQLException{
        // get mã hoá đơn vừa đưa lên database (tức mã mới nhất)
        int dem = HoaDonDAO.demHoaDon();
        MaHoaDon = "HD" + dem;
        for(SanPham SP : ShareHelper.HoaDonGiaoDich.getDSSP().keySet()){
            HoaDonChiTiet HDCT = new HoaDonChiTiet();
            HDCT.setMaHoaDon(MaHoaDon);
            HDCT.setMaSanPham(SP.getMaSanPham());
            HDCT.setDonGia(SP.getGiaBan());
            HDCT.setSoLuong(ShareHelper.HoaDonGiaoDich.getDSSP().get(SP));
            HDCT.setThanhTien(SP.getGiaBan() * ShareHelper.HoaDonGiaoDich.getDSSP().get(SP));
            HDCTDAO.themHDCT(HDCT);
        }
    }
    
    /*
     * Hàm lấy thông tin người dùng đăng nhập để hiển thị 
     */
    void hienNguoiDung(){
        if(ShareHelper.NguoiDung != null){
            txt_TenNhanVien.setText(ShareHelper.NguoiDung.getHoTen());
        }
    }
    
    /*
     * Hàm cập nhật điểm thưởng khách hàng lên database nếu có thay đổi
     */
    void capnhatDiemThuong() throws SQLException{
        int DiemThuong = 0;
        if(ShareHelper.DiemThuongMoi > 0){
            DiemThuong = ShareHelper.DiemThuongMoi + Integer.parseInt(txt_DiemThuong.getText());
        }
        else {
            DiemThuong = ShareHelper.KhachGiaoDich.getDiemThuong() + Integer.parseInt(txt_DiemThuong.getText());
        }
        ShareHelper.KhachGiaoDich.setDiemThuong(DiemThuong);
        KhachHangDAO.capnhatDiemThuong(ShareHelper.KhachGiaoDich);
    }
    
    /*
     * Hàm exit khỏi chương trình
     */
    void exit(){
        if(DialogHelper.confirm(this, "Bạn muốn thoát chương trình?")){
            System.exit(0);
        }
    }
    
    /*
     * Hàm logout ra màn hình đăng nhập
          - xoá hết thông tin: người dùng, khách hàng giao dịch, hoá đơn tạm
     */
    void logout(){
        if(DialogHelper.confirm(this, "Bạn muốn đăng xuất?")){
            ShareHelper.HoaDonGiaoDich = null;
            ShareHelper.KhachGiaoDich = null;
            ShareHelper.NguoiDung = null;
            this.dispose();
            new DangNhapJFrame().setVisible(true);
        }
    }
    
    /*
     * Hàm kết nối máy in và in hoá đơn
     */
    void inHoaDon() {
        try {
            HashMap HoaDon = new HashMap();
            HoaDon.put("MaInHoaDon", MaHoaDon);
            jdbcHelper.inHoaDon(HoaDon);
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
    
    /*
     * Hàm cập nhật tồn kho khi xuất hoá đơn
     */
    void capnhatTonKho() {
        try {
            for (SanPham SP : ShareHelper.HoaDonGiaoDich.getDSSP().keySet()) {
                int SoLuongMoi = SP.getTonKho() - ShareHelper.HoaDonGiaoDich.getDSSP().get(SP);
                SanPhamDAO.capnhatTonKho(SP.getMaSanPham(), SoLuongMoi);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Có lỗi: " + e.toString());
        }
    }
}
